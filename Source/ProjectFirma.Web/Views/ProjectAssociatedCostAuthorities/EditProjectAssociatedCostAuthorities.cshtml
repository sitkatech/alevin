@*-----------------------------------------------------------------------
    <copyright file="EditContacts.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.BootstrapWrappers
@using ProjectFirmaModels.Models
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.ProjectAssociatedCostAuthorities.EditProjectAssociatedCostAuthorities
    <style>
        .selected-cost-authorities {
            margin-top: 15px;
        }
        .selected-cost-authorities ul {
            list-style: none;
            margin: 0;
            padding: 0;
        }
        .selected-cost-authorities ul li + li {
            margin-top: 5px;
        }
        .selected-cost-authorities .remove-cost-authority span.glyphicon {
            color: #fff;
        }
        /* Some options are very long with all of their agreements, so we need to allow the options to be word wrapped */
        .dropdown-menu > li > a.allow-option-word-wrap {
            white-space: pre-wrap;
        }
        #EditProjectAssociatedCostAuthoritiesApp button.dropdown-toggle {
            white-space: pre-wrap;
        }
        #EditProjectAssociatedCostAuthoritiesApp button.dropdown-toggle > span {
            width: auto;
        }
    </style>
    <script type="text/javascript" src="@Url.Content("~/Views/ProjectAssociatedCostAuthorities/EditProjectAssociatedCostAuthoritiesController.js")"></script>
    <script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function ()
    {
        return {
            AngularModel: @Html.Raw(JObject.FromObject(Model)),
            AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
        };
    });
    jQuery(document).ready(function ()
    {
        angular.bootstrap(jQuery("#EditProjectAssociatedCostAuthoritiesApp"), ["ProjectFirmaApp"]);
        jQuery(".selectpicker").selectpicker();
        jQuery(".modal").on("hidden.bs.modal",
            function() {
                jQuery(".bootstrap-select.open").removeClass("open");
            });

    });
    // ]]>
    </script>
    <script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
    <link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />
   
    <div class="validationError">
        @Html.ValidationSummary()
    </div>
    <div id="EditProjectAssociatedCostAuthoritiesApp" ng-controller="EditProjectAssociatedCostAuthoritiesController">
        @using (Html.BeginForm())
        {
            <div class="row">
                <div class="col-md-12">
                    <p>Select the @FieldDefinitionEnum.PrimaryCostAuthorityWorkBreakdownStructure.ToType().GetFieldDefinitionLabel() that will be associated with your @(FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()). The @FieldDefinitionEnum.CostAuthorityWorkBreakdownStructure.ToType().GetFieldDefinitionLabel() will be used to associate @FieldDefinitionEnum.Agreement.ToType().GetFieldDefinitionLabelPluralized().</p>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-12">@Html.LabelWithSugarFor(FieldDefinitionEnum.PrimaryCostAuthorityWorkBreakdownStructure.ToType())</div>
                <div class="col-md-12">
                    <p class="smallExplanationText">@FieldDefinitionEnum.PrimaryCostAuthorityWorkBreakdownStructure.ToType().GetFieldDefinitionDescription()</p>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="row">
                        @*Selectpicker*@
                        <div class="col-md-12">
                            <div class="input-group" style="width: 100%;">
                                <select class="selectpicker" name="@Html.NameFor(x => x.PrimaryCostAuthorityID)" ng-model="primaryCostAuthorityID" data-width="100%" data-container=".modal-content" data-live-search="true" data-size="6" id="PrimaryCostAuthorityID" data-selected-text-format="count" data-dropup-auto="false">
                                    <option value="0" disabled>Select a @(FieldDefinitionEnum.PrimaryCostAuthorityWorkBreakdownStructure.ToType().GetFieldDefinitionLabel())</option>
                                    <option class="allow-option-word-wrap" ng-selected="costAuthority.CostAuthorityID == primaryCostAuthorityID" ng-repeat="costAuthority in getPrimaryCostAuthorityOptions()" value="{{costAuthority.CostAuthorityID}}">{{costAuthority.CostAuthorityDropdownDisplayName}}</option>
                                </select>
                                @Html.ValidationMessageFor(m => m.PrimaryCostAuthorityID)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-12">@Html.LabelWithSugarFor(FieldDefinitionEnum.CostAuthorityWorkBreakdownStructure.ToType())</div>
                <div class="col-md-12">
                    <p class="smallExplanationText">@FieldDefinitionEnum.CostAuthorityWorkBreakdownStructure.ToType().GetFieldDefinitionDescription()</p>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="row">
                        @*Selectpicker*@
                        <div class="col-md-12">
                            <div class="input-group" style="width: 100%;">
                                <select class="selectpicker" multiple name="@Html.NameFor(x => x.SelectedCostAuthorityIDs)" ng-model="selectedCostAuthorityIDs" data-width="100%" data-container=".modal-content" data-live-search="true" data-size="6" id="SelectedCostAuthorityIDs" data-selected-text-format="count" data-dropup-auto="false">
                                    <option value="0" disabled>Select a @(FieldDefinitionEnum.CostAuthorityWorkBreakdownStructure.ToType().GetFieldDefinitionLabel())</option>
                                    <option class="allow-option-word-wrap" ng-selected="isSelected(costAuthority.CostAuthorityID)" ng-repeat="costAuthority in CostAuthorityOptions" value="{{costAuthority.CostAuthorityID}}">{{costAuthority.CostAuthorityDropdownDisplayName}}</option>
                                </select>
                                @Html.ValidationMessageFor(m => m.SelectedCostAuthorityIDs)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row selected-cost-authorities" ng-show="SelectedCostAuthorities.length > 0">
                <div class="col-md-12">
                    <div class="panel panel-primary">
                        <div class="panel-heading">
                            <div class="panel-title">Your selection will connect the following to this project.</div>
                        </div>
                        <div class="panel-body panel-body-table">
                            <table class="table table-condensed table-striped">
                                <tr>
                                    <th></th>
                                    <th class="col-md-5">@Html.LabelWithSugarFor(FieldDefinitionEnum.CostAuthorityWorkBreakdownStructure.ToType())</th>
                                    <th class="col-md-5">@Html.LabelWithSugarFor(FieldDefinitionEnum.Agreement.ToType())</th>
                                </tr>
                                <tr ng-repeat="selectedCostAuthority in SelectedCostAuthorities">
                                    <td>
                                        <button type="button" title="Remove row" alt="Remove row" ng-click="removeCostAuthority(selectedCostAuthority.CostAuthorityID)" class="btn btn-xs btn-firma remove-cost-authority"><span class="glyphicon glyphicon-trash white"></span></button>
                                    </td>
                                    <td>{{selectedCostAuthority.CostAuthorityDisplayName}}</td>
                                    <td>
                                        <ul>
                                            <li ng-if="selectedCostAuthority.CostAuthorityAgreementSimplesList.length == 0">(none)</li>
                                            <li ng-repeat="agreement in selectedCostAuthority.CostAuthorityAgreementSimplesList">{{agreement.AgreementDisplayName}}</li>
                                        </ul>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>

                </div>
            </div>

        }
    </div>
