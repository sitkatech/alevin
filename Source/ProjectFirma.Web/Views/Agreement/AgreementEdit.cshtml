@*-----------------------------------------------------------------------
    <copyright file="Edit.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Common
@inherits ProjectFirma.Web.Views.Agreement.AgreementEdit
@using (Html.BeginForm())
{
    @*if (ViewDataTyped.IsInKeystone)
    {
        <p id="keystoneParagraph" class="systemText">Because this @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel() has user accounts associated with it, its Name, Short Name, and Home Page information come from Keystone. To change this @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel()'s Name, please @ModalDialogFormHelper.ModalDialogFormLink("submit a support request", ViewDataTyped.RequestOrganizationChangeUrl, "Request Support", 800, "Submit Request", "Cancel", new List<string>(), null, null). While you may update this @FieldDefinitionEnum.Organization.ToType().GetFieldDefinitionLabel()'s Short Name and Home Page here, try syncing from Keystone first.</p>
    }*@

<div class="form-horizontal">

   @*<div class="col-sm-3 control-label">
              @Html.LabelWithSugarFor(m => m.OrganizationName)
          </div>
          <div class="col-sm-9">
              @if (ViewDataTyped.IsInKeystone)
              {
                  @Model.OrganizationName
                  @Html.HiddenFor(x => x.OrganizationName)
              }
              else
              {
                  @Html.TextBoxFor(m => m.OrganizationName, new { @class = "form-control", style = "width:100%" })
                  @Html.ValidationMessageFor(m => m.OrganizationName)
              }
          </div>
      </div>*@
   @*Aped from OrganizationEdit.cshtml*@

   <div class="form-group">
      <div class="col-sm-3 control-label">
         @Html.LabelWithSugarFor(m => m.AgreementNumber, true)
      </div>
      <div class="col-sm-9">
         @Html.TextBoxFor(m => m.AgreementNumber, new { @class = "form-control", style = "width:100%" })
         @Html.ValidationMessageFor(m => m.AgreementNumber)
      </div>
   </div>

   <div class="form-group">
      <div class="col-sm-3 control-label">
         @Html.LabelWithSugarFor(m => m.ObligationNumberID)
      </div>
      <div class="col-sm-9">
         @Html.SearchableDropDownListFor(m => m.ObligationNumberID, ViewDataTyped.ObligationNumberSelectListItems)
         @Html.ValidationMessageFor(m => m.ObligationNumberID)
      </div>
   </div>

   <div class="form-group">
      <div class="col-sm-3 control-label">
         @Html.LabelWithSugarFor(m => m.OrganizationID, true)
      </div>
      <div class="col-sm-9">
         @Html.SearchableDropDownListFor(m => m.OrganizationID, ViewDataTyped.OrganizationSelectListItems)
      </div>
   </div>

   <div class="form-group">
       <div class="col-sm-3 control-label">
           @Html.LabelWithSugarFor(m => m.ContractTypeID)
       </div>
       <div class="col-sm-9">
           @Html.DropDownListFor(m => m.ContractTypeID, ViewDataTyped.ContractTypeSelectListItems, new { @class = "form-control" })
           @Html.ValidationMessageFor(m => m.ContractTypeID)
       </div>
   </div>
   <div class="form-group">
       <div class="col-sm-3 control-label">
           @Html.LabelWithSugarFor(x => x.StartDate)
       </div>
       <div class="col-sm-9">
           @Html.EditorFor(m => m.StartDate, new { @class = "form-control" })
           @Html.ValidationMessageFor(m => m.StartDate)
       </div>
   </div>
   <div class="form-group">
       <div class="col-sm-3 control-label">
           @Html.LabelWithSugarFor(x => x.EndDate)
       </div>
       <div class="col-sm-9">
           @Html.EditorFor(m => m.EndDate, new { @class = "form-control" })
           @Html.ValidationMessageFor(m => m.EndDate)
       </div>
   </div>




</div>
    @Html.HiddenFor(m => m.AgreementID)
}


<script type="text/javascript">

   var agreementElement = jQuery('#' + '@Html.IdFor(m => m.AgreementNumber)');
   var obligationElement = jQuery('#' + '@Html.IdFor(m => m.ObligationNumberID)');

   function HookupAgreementNumberToChangeEvents()
   {
      console.log('HookupAgreementNumberToChangeEvents');
      agreementElement.change(AgreementNumberChanged);
   }

   function HookupObligationToChangeEvents()
   {
      console.log('HookupObligationToChangeEvents');
      obligationElement.change(ObligationNumberChanged);
   }

   function AgreementNumberChanged()
   {
      console.log('AgreementNumberChanged');
      var currentAgreementNumber = agreementElement.val();
      var currentObligationNumber = jQuery('#' + '@Html.IdFor(m => m.ObligationNumberID)' + ' option:selected' ).text();
      //console.log('currentAgreementNumber: ' + currentAgreementNumber);
      //console.log('currentObligationNumber: ' + currentObligationNumber);
      // If they typed an Agreement Number
      if (currentAgreementNumber.length > 0)
      {
         //console.log('Typed AgreementNumber:  ' + currentAgreementNumber);
         // And that Agreement Number doesn't agree with the Obligation number
         if (currentAgreementNumber !== currentObligationNumber)
         {
            //console.log('AgreementNumber did not match Obligation number ' + currentObligationNumber + ' attempting to clear..');
            // Clear the Obligation number
            obligationElement.val('');
         }
      }
   }

   function ObligationNumberChanged()
   {
      console.log('ObligationNumberChanged');
      var currentObligationNumber = jQuery('#' + '@Html.IdFor(m => m.ObligationNumberID)' + ' option:selected').text();
      agreementElement.val(currentObligationNumber);
   }

   jQuery(document).ready(function ()
   {
      HookupAgreementNumberToChangeEvents();
      HookupObligationToChangeEvents();
   });
</script>

@*<script type="text/javascript" src="/ScriptsCustom/CkEditorReady.js"></script>*@
