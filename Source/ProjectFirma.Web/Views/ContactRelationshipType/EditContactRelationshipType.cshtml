@*-----------------------------------------------------------------------
    <copyright file="EditContactRelationshipType.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirma.Web.Common
@inherits ProjectFirma.Web.Views.ContactRelationshipType.EditContactRelationshipType


<div class="validationError">
    @Html.ValidationSummary()
</div>


<div>
    @using (Html.BeginForm())
    {
   <div class="form-horizontal">
      <div class="form-group">
         <div class="col-xs-12 col-sm-4 control-label">@Html.LabelWithSugarFor(m => m.ContactRelationshipTypeName)</div>
         <div class="col-xs-12 col-sm-8">
            @Html.TextBoxFor(m => m.ContactRelationshipTypeName, new { style = "width: 100%", @class = "form-control" })
         </div>
      </div>

      <div class="form-group">
         <div class="col-sm-4 control-label">@Html.LabelWithSugarFor(m => m.ContactRelationshipTypeAcceptsMultipleValues)</div>
         <div class="col-sm-8">
            <div class="radio-inline">
               <label>
                  @Html.RadioButtonFor(m => m.ContactRelationshipTypeAcceptsMultipleValues, true) Yes
               </label>
            </div>
            <div class="radio-inline">
               <label>
                  @Html.RadioButtonFor(m => m.ContactRelationshipTypeAcceptsMultipleValues, false) No
               </label>
            </div>
            @Html.ValidationMessageFor(m => m.ContactRelationshipTypeAcceptsMultipleValues)
         </div>
      </div>

       <div class="form-group">
           <div class="col-sm-4 control-label">@Html.LabelWithSugarFor(m => m.IsContactRelationshipTypeRequired)</div>
           <div class="col-sm-8">
               <div class="radio-inline">
                   <label>
                       @Html.RadioButtonFor(m => m.IsContactRelationshipTypeRequired, true) Yes
                   </label>
               </div>
               <div class="radio-inline">
                   <label>
                       @Html.RadioButtonFor(m => m.IsContactRelationshipTypeRequired, false) No
                   </label>
               </div>
               @Html.ValidationMessageFor(m => m.IsContactRelationshipTypeRequired)
           </div>
       </div>
       
       <div class="form-group">
           <div class="col-sm-4 control-label">@Html.LabelWithSugarFor(m => m.CanManageProject)</div>
           <div class="col-sm-8">
               <div class="radio-inline">
                   <label>
                       @Html.RadioButtonFor(m => m.CanManageProject, true) Yes
                   </label>
               </div>
               <div class="radio-inline">
                   <label>
                       @Html.RadioButtonFor(m => m.CanManageProject, false) No
                   </label>
               </div>
               @Html.ValidationMessageFor(m => m.CanManageProject)
           </div>
       </div>

       <div class="form-group">
         <div class="col-sm-4 control-label">@Html.LabelWithSugarFor(m => m.IsContactRelationshipRequiredMinimumProjectStageID)</div>
         <div class="col-sm-8">
            @Html.DropDownListFor(m => m.IsContactRelationshipRequiredMinimumProjectStageID, ViewDataTyped.ProjectStageSelectListItems, new Dictionary<string, object> { { "class", "form-control" } })
            @Html.ValidationMessageFor(m => m.IsContactRelationshipRequiredMinimumProjectStageID)
         </div>
      </div>

      <div class="form-group">
         <div class="col-sm-4 control-label">@Html.LabelWithSugarFor(m => m.ContactRelationshipTypeDescription)</div>
         <div class="col-sm-8">
            @Html.TextAreaFor(m => m.ContactRelationshipTypeDescription, new Dictionary<string, object> { { "class", "form-control" } })
            @Html.ValidationMessageFor(m => m.IsContactRelationshipTypeRequired)
         </div>
      </div>

      </div>
      @Html.HiddenFor(m => m.RelationshipTypeID)
      }

   </div>
