@*-----------------------------------------------------------------------
<copyright file="EditProjectFundingSourceBudgets.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using ProjectFirmaModels.Models
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.ProjectFundingSourceBudget
@using ProjectFirma.Web.Views.ProjectUpdate
@inherits ProjectFirma.Web.Views.ProjectFundingSourceBudget.EditProjectFundingSourceBudgetByCostType
<script type="text/javascript">
    // <![CDATA[
    jQuery(document).ready(function() {
        angular.module("ProjectFirmaApp").factory("angularModelAndViewData",
            function() {
                return {
                    AngularModel: @Html.Raw(JObject.FromObject(Model)),
                    AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
                };
            });
        angular.bootstrap(jQuery("#EditFundingSourceBudgetsApp"), ["ProjectFirmaApp"]);

        jQuery(".selectpicker").selectpicker("refresh");
        jQuery(".modal").on("hidden.bs.modal",
            function() {
                jQuery(".bootstrap-select.open").removeClass("open");
            });
    })
    // ]]>

</script>
<style>
    .table > tbody > tr.secondRow > td {
        border-top: none
    }

    .table > tbody > tr > th {
        border-top: none
    }

    .funding td:first-child, .funding th:first-child {
        width: 30px;
    }

    .summaryTableHeader {
        background-color: #666666;
    }

    .summaryTableHeader label, .summaryTableHeader span {
        color: #FFFFFF;
        font-weight: normal;
    }

    .summaryTableRow {
        background-color: #f9f9f9;
    }

    .sourcedField {
        font-style: italic;
        color: #6e6e6e;
    }
    .fundingSourceHeaderRow {
        background-color: #d9edf7;
    }

</style>

<div class="row">
    <div class="col-xs-12">
        <div class="validationError">
            @Html.ValidationSummary()
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <div @*ng-app="ProjectFirmaApp"*@ id="EditFundingSourceBudgetsApp" ng-controller="ProjectFundingSourceBudgetByCostTypeController">
            @using (Html.BeginForm())
            {
                <div class="form-group">
                    <label class="control-label">
                        1. Does the @ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel() budget vary by year or is it the same?
                    </label>
                    <div class="input-group" style="margin-left: 20px">
                        <select ng-model="selectedFundingTypeID"
                                class="selectpicker"
                                data-container="body"
                                data-width="100%"
                                ng-change="populateCalendarYearBudgets()">
                            <option ng-repeat="fundingType in fundingTypes()"
                                    value="{{fundingType.Value}}"
                                    ng-selected="selectedFundingTypeID == fundingType.Value"
                                    ng-bind="fundingType.Text"></option>
                        </select>
                        @Html.ValidationMessageFor(m => m.FundingTypeID)
                    </div>
                </div>

                <div ng-if="!budgetTypeNotSelected()">
                    <div class="form-group">
                        <label class="control-label">2. Select the @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabelPluralized() that are relevant to the  @ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel().</label>
                        <div style="margin-left: 20px">
                            <label ng-repeat="costType in AngularModel.ProjectRelevantCostTypes | orderBy:'CostTypeName'" style="padding-right: 10px">
                                <input type="checkbox" ng-model="costType.IsRelevant" ng-click="addRemoveCostTypeFromBudgets()" /> <span ng-bind="costType.CostTypeName"></span>
                            </label>
                        </div>
                    </div>
                    <div ng-show="getRelevantCostTypes().length === 0">
                        <p class="systemText">Select at least one @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabel() to enter budget information for a @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel(). Or you can enter the value of any funding gaps for which you have not identified a @(ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel()) in the "@(ViewDataTyped.FieldDefinitionForNoFundingSourceIdentified.GetFieldDefinitionLabel())" row.</p>
                    </div>
                    <div ng-show="getRelevantCostTypes().length > 0">
                        <div class="form-group">
                            <div style="display: inline-block; vertical-align: top">
                                <label>3. Identify the @ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel()'s  @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabelPluralized(). You can add more than one.</label>
                            </div>
                            <br />
                            <div class="input-group" style="padding-bottom: 5px; margin-left: 20px">
                                <select ng-model="fundingSourceIDToAdd.Value"
                                        class="selectpicker"
                                        data-live-search="true"
                                        data-container="body"
                                        title="Select a @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() to Add"
                                        data-width="70%">
                                    <option value="null" disabled selected>Select a @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() to Add</option>
                                    <option ng-repeat="fundingSource in filteredFundingSources()"
                                            value="{{fundingSource.FundingSourceID}}"
                                            ng-selected="fundingSourceIDToAdd == fundingSource.FundingSourceID"
                                            ng-bind="fundingSource.DisplayName"
                                            data-tokens="{{fundingSource.DisplayName}} {{fundingSource.OrganizationFullName}} "></option>
                                </select>
                                <button class="btn btn-firma" type="button" style="margin-left: 5px;" ng-click="addRow()">Add</button>
                                <br />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label">4. Enter amount by each @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() and for each @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabel(). </label>
                        </div>
                        <p style="margin-left: 20px" class="systemText" ng-show="getAllUsedFundingSourceIds().length === 0">Add a @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() to start entering budgets</p>
                    </div>
                    <div style="margin-left: 20px" ng-if="budgetVariesByYear()">

                        <table class="table-responsive table-condensed table-bordered" style="display: block; overflow: auto;">
                            <thead>
                                <tr>
                                    <th colspan="2"></th>
                                    <th ng-repeat="calendarYear in calendarYearRange" colspan="3" style="text-align: center;">
                                        <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$first" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear - 1}}'" style="cursor: pointer"></span>
                                        <span class="glyphicon glyphicon-minus-sign blue" ng-click="deleteCalendarYear(calendarYear)" ng-show="$first && canDeleteCalendarYear(calendarYear)" title="Remove '{{calendarYear}}'" alt="Remove '{{calendarYear}}'" style="cursor: pointer"></span>
                                        <span ng-bind="formatCalendarYear(calendarYear)"></span>
                                        <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$last" title="Add Next Year '{{calendarYear + 1}}'" alt="Add Next Year '{{calendarYear + 1}}'" style="cursor: pointer"></span>
                                        <span class="glyphicon glyphicon-minus-sign blue" ng-click="deleteCalendarYear(calendarYear)" ng-show="$last && canDeleteCalendarYear(calendarYear)" title="Remove '{{calendarYear}}'" alt="Remove '{{calendarYear}}'" style="cursor: pointer"></span>
                                    </th>
                                    <th colspan="3" style="text-align: center;">
                                        <span>Totals</span>
                                    </th>
                                </tr>
                                <tr ng-show="shouldShowFundingSources()">
                                    <th style="white-space: nowrap" colspan="2">
                                        <span> @Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForFundingSource)</span>
                                    </th>
                                    <th ng-repeat-start="calendarYear in calendarYearRange">
                                        <span> @ViewDataTyped.FieldDefinitionForProjectedFunding.GetFieldDefinitionLabel()</span>
                                    </th>
                                    <th class="sourcedField">
                                        <span>
                                            @ViewDataTyped.FieldDefinitionForObligatedFunding.GetFieldDefinitionLabel()
                                        </span>
                                    </th>
                                    <th ng-repeat-end class="sourcedField">
                                        <span>
                                            @ViewDataTyped.FieldDefinitionForExpendedFunding.GetFieldDefinitionLabel()
                                        </span>
                                    </th>
                                    @*Repeat for the Totals Section*@
                                    <th>
                                        <span> @ViewDataTyped.FieldDefinitionForProjectedFunding.GetFieldDefinitionLabel()</span>
                                    </th>
                                    <th class="sourcedField">
                                        <span>
                                            @ViewDataTyped.FieldDefinitionForObligatedFunding.GetFieldDefinitionLabel()
                                        </span>
                                    </th>
                                    <th class="sourcedField">
                                        <span>@ViewDataTyped.FieldDefinitionForExpendedFunding.GetFieldDefinitionLabel()</span>
                                    </th>
                                </tr>
                            </thead>

                            <tbody ng-show="shouldShowFundingSources()" ng-repeat="fundingSourceID in getAllUsedFundingSourceIds() | orderBy:[getFundingSourceNameById]" style="border-top: 2px solid #ddd">
                                <tr class="fundingSourceHeaderRow">
                                    <td style="width: 30px; min-width: 30px;">
                                        <span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteFundingSourceRow(fundingSourceID)" style="cursor: pointer;"></span>
                                    </td>
                                    <td colspan="{{(calendarYearRange.length * 3) + 4}}">
                                        <label class="control-label">
                                            <span ng-bind="getFundingSourceNameById(fundingSourceID)"></span>
                                        </label>
                                    </td>
                                </tr>
                                @* Budget Entry Rows *@
                                <tr ng-repeat="projectFundingSourceBudget in getProjectFundingSourceBudgetRowsForFundingSource(fundingSourceID) | orderBy:[getFundingSourceName]">
                                    <td style="width: 30px; min-width: 30px;"></td>
                                    <td ng-bind="getCostTypeName(projectFundingSourceBudget)" />
                                    <td style="text-align: right;" ng-repeat-start="calendarYearBudget in getRelevantCalendarYearBudgets(projectFundingSourceBudget) | orderBy:'CalendarYear'">

                                        <input type="text" ng-model="calendarYearBudget.ProjectedAmount" ng-focus="onTextFocus($event)" class="sitkaCurrency form-control" ng-currency />
                                    </td>
                                    <td class="sourcedField" style="text-align: right">
                                        {{getObligationValue(calendarYearBudget.CalendarYear, fundingSourceID, projectFundingSourceBudget.CostTypeID) | currency:"$"}}
                                    </td>
                                    <td class="sourcedField" style="text-align: right;" ng-repeat-end>
                                        {{getExpenditureValue(calendarYearBudget.CalendarYear, fundingSourceID, projectFundingSourceBudget.CostTypeID) | currency:"$"}}
                                    </td>
                                    @* Start Row Totals *@
                                    <th style="text-align: right">
                                        {{getBudgetTotalForRow(projectFundingSourceBudget) | currency:"$"}}
                                    </th>
                                    <th class="sourcedField" style="text-align: right">
                                        {{getObligationTotalForFundingSourceAndCostType(fundingSourceID, projectFundingSourceBudget.CostTypeID) | currency:"$"}}
                                    </th>
                                    <th class="sourcedField" style="text-align: right;">
                                        {{getExpenditureTotalForFundingSourceAndCostType(fundingSourceID, projectFundingSourceBudget.CostTypeID) | currency:"$"}}
                                    </th>
                                </tr>
                                @* Sum of budgets for funding source*@
                                <tr ng-show="getRelevantCostTypes().length > 1">
                                    <td style="width: 30px; min-width: 30px;"></td>
                                    <th style="white-space: nowrap">
                                        All @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabelPluralized()
                                    </th>
                                    <th style="text-align: right;" ng-repeat-start="calendarYear in calendarYearRange">
                                        <span> {{getBudgetTotalForFundingSourceAndCalendarYear(fundingSourceID, calendarYear) | currency:"$"}}</span>
                                    </th>
                                    <th class="sourcedField" style="text-align: right">
                                        <span>{{getObligationTotalForFundingSourceAndCalendarYear(calendarYear, fundingSourceID) | currency:"$"}}</span>
                                    </th>
                                    <th class="sourcedField" style="text-align: right;" ng-repeat-end>
                                        <span>{{getExpenditureTotalForFundingSourceAndCalendarYear(calendarYear, fundingSourceID) | currency:"$"}}</span>
                                    </th>
                                    <th style="text-align: right">
                                        {{getBudgetTotalForFundingSource(fundingSourceID) | currency:"$"}}
                                    </th>
                                    <th class="sourcedField" style="text-align: right">
                                        {{getObligationTotalForFundingSource(fundingSourceID) | currency:"$"}}
                                    </th>
                                    <th class="sourcedField" style="text-align: right">
                                        {{getExpenditureTotalForFundingSource(fundingSourceID) | currency:"$"}}
                                    </th>
                                </tr>
                            </tbody>
                            @* No Funding Source Identified Yet entry row*@
                            <tbody style="border-top: 2px solid #ddd">
                                <tr class="fundingSourceHeaderRow">
                                    <td colspan="2">@Html.LabelWithSugarFor(@ViewDataTyped.FieldDefinitionForNoFundingSourceIdentified)</td>
                                    <td ng-repeat-start="calendarYearNoFunding in getNoFundingSourceAmounts() | orderBy:'CalendarYear'">
                                        <input type="text" ng-model="calendarYearNoFunding.MonetaryAmount" ng-focus="onTextFocus($event)" class="sitkaCurrency form-control" ng-currency />
                                    </td>
                                    <td></td>
                                    <td ng-repeat-end></td>
                                    <th style="text-align: right"> {{getNoFundingSourceIdentifiedTotalForCalendarYear() | currency:"$"}}</th>
                                    <td></td>
                                    <td></td>
                                </tr>
                            </tbody>
                            @* Sum of all budgets and No Funding Source Identified Yet*@
                            <tbody style="border-top: 2px solid #ddd">
                                <tr>
                                    <td colspan="2">@Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForEstimatedTotalCost)</td>
                                    <th ng-repeat-start="calendarYear in calendarYearRange" style="text-align: right">
                                        {{getTotalTargetedForCalendarYear(true, calendarYear) | currency:"$"}}

                                    </th>
                                    <th class="sourcedField" style="text-align: right">
                                        <span ng-show="shouldShowFundingSources()">{{getObligationTotalForCalendarYear(calendarYear) | currency:"$"}}</span>
                                    </th>
                                    <th class="sourcedField" ng-repeat-end style="text-align: right">
                                        <span ng-show="shouldShowFundingSources()">{{getExpenditureTotalForCalendarYear(calendarYear) | currency:"$"}}</span>
                                    </th>
                                    <th style="text-align: right">
                                        {{getTotalVariesByYear() | currency:"$"}}
                                    </th>
                                    <th class="sourcedField" style="text-align: right">
                                        {{getObligationTotalVariesByYear() | currency:"$"}}
                                    </th>
                                    <th class="sourcedField" style="text-align: right">
                                        {{getExpenditureTotalVariesByYear() | currency:"$"}}
                                    </th>
                                </tr>
                            </tbody>
                        </table>
                        <div ng-repeat="projectFundingSourceBudget in getRelevantProjectFundingSourceBudgets()">
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.ProjectID}}" />
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.FundingSourceID}}" />
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.CostTypeID}}" />
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].IsRelevant).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.IsRelevant}}" />
                            <div ng-repeat="calendarYearBudget in getRelevantCalendarYearBudgets(projectFundingSourceBudget) | orderBy:'CalendarYear'">
                                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CalendarYearBudgets[1].CalendarYear).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearBudget.CalendarYear}}" />
                                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CalendarYearBudgets[1].ProjectedAmount).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearBudget.ProjectedAmount}}" />
                                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CalendarYearBudgets[1].IsRelevant).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearBudget.IsRelevant}}" />
                            </div>
                        </div>
                        <div ng-repeat="calendarYearNoFunding in AngularModel.NoFundingSourceAmounts | orderBy:'CalendarYear'">
                            <input type="hidden" name="@Html.NameFor(x => x.NoFundingSourceAmounts[0].CalendarYear).ToString().Replace("0", "{{$index}}")" value="{{calendarYearNoFunding.CalendarYear}}" />
                            <input type="hidden" name="@Html.NameFor(x => x.NoFundingSourceAmounts[0].MonetaryAmount).ToString().Replace("0", "{{$index}}")" value="{{calendarYearNoFunding.MonetaryAmount}}" />
                        </div>
                    </div>

                    <div style="margin-left: 20px" ng-if="budgetSameEachYear()">
                        <table class="table-responsive table-condensed table-bordered" style="overflow: auto;">
                            <thead>
                                <tr>
                                    <th style="white-space: nowrap" colspan="2">
                                        <span ng-show="shouldShowFundingSources()"> @Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForFundingSource)</span>
                                    </th>
                                    <th>
                                        <span ng-show="shouldShowFundingSources()">
                                            Each Year @ViewDataTyped.FieldDefinitionForProjectedFunding.GetFieldDefinitionLabel()
                                        </span>
                                    </th>
                                    <th class="sourcedField">
                                        <span ng-show="shouldShowFundingSources()">
                                            Total Reported @ViewDataTyped.FieldDefinitionForObligatedFunding.GetFieldDefinitionLabel()
                                        </span>
                                    </th>
                                    <th class="sourcedField">
                                        <span ng-show="shouldShowFundingSources()">
                                            Total Reported @ViewDataTyped.FieldDefinitionForExpendedFunding.GetFieldDefinitionLabel()
                                        </span>
                                    </th>
                                    @* 4/10/2020 TK - I am not sure totals are wanted since there are not multiple years in this grid and we are not summing across funding type dollars *@
                                    @*<th style="text-align: right">Total</th>*@
                                </tr>
                            </thead>
                            <tbody ng-show="shouldShowFundingSources()" ng-repeat="fundingSourceID in getAllUsedFundingSourceIds() | orderBy:[getFundingSourceNameById]" style="border-top: 2px solid #ddd">
                                <tr class="fundingSourceHeaderRow">
                                    <td style="width: 30px; min-width: 30px;"><span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteFundingSourceRow(fundingSourceID)" style="cursor: pointer;"></span></td>
                                    <td colspan="5"><label class="control-label"><span ng-bind="getFundingSourceNameById(fundingSourceID)"></span></label></td>
                                </tr>
                                @* Budget Entry Rows *@
                                <tr ng-repeat="projectFundingSourceBudget in getProjectFundingSourceBudgetRowsForFundingSource(fundingSourceID) | orderBy:[getFundingSourceName]">
                                    <td style="width: 30px; min-width: 30px;"></td>
                                    <td ng-bind="getCostTypeName(projectFundingSourceBudget)" />
                                    <td style="text-align: right;">
                                        <input type="text" ng-model="projectFundingSourceBudget.ProjectedAmount" ng-focus="onTextFocus($event)" class="sitkaCurrency form-control" ng-currency />

                                    </td>
                                    <td style="text-align: right">
                                        {{getObligationTotalForFundingSourceAndCostType(fundingSourceID, projectFundingSourceBudget.CostTypeID) | currency:"$"}}
                                    </td>
                                    <td style="text-align: right;">
                                        {{getExpenditureTotalForFundingSourceAndCostType(fundingSourceID, projectFundingSourceBudget.CostTypeID) | currency:"$"}}
                                    </td>
                                    @* 4/10/2020 TK - I am not sure totals are wanted since there are not multiple years in this grid and we are not summing across funding type dollars *@
                                    @*<th style="text-align: right"> {{getBudgetTotalForRowSameEachYear(projectFundingSourceBudget) | currency:"$"}}</th>*@
                                </tr>
                                @* Sum of budgets for funding source*@
                                <tr ng-show="getRelevantCostTypes().length > 1">
                                    <td style="width: 30px; min-width: 30px;"></td>
                                    <th style="white-space: nowrap">
                                        All @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabelPluralized()
                                    </th>
                                    <th style="text-align: right;">
                                        <span> {{getBudgetTotalForFundingSourceSameEachYear(fundingSourceID, false) | currency:"$"}}</span>
                                    </th>
                                    <th class="sourcedField" style="text-align: right">
                                        <span> {{getObligationTotalForFundingSource(fundingSourceID) | currency:"$"}}</span>
                                    </th>
                                    <th class="sourcedField" style="text-align: right;">
                                        <span> {{getExpenditureTotalForFundingSource(fundingSourceID) | currency:"$"}}</span>
                                    </th>
                                    @* 4/10/2020 TK - I am not sure totals are wanted since there are not multiple years in this grid and we are not summing across funding type dollars *@
                                    @*<th style="text-align: right"> {{getBudgetTotalForFundingSourceSameEachYear(fundingSourceID) | currency:"$"}}</th>*@
                                </tr>
                            </tbody>
                            @* No Funding Source Identified Yet entry*@
                            <tbody style="border-top: 2px solid #ddd">
                                <tr class="fundingSourceHeaderRow">
                                    <td colspan="2">@Html.LabelWithSugarFor(@ViewDataTyped.FieldDefinitionForNoFundingSourceIdentified)</td>
                                    <td style="text-align: right">
                                        <input type="text" ng-model="noFundingSourceIdentifiedSameEachYear.Value" ng-focus="onTextFocus($event)" class="sitkaCurrency form-control" ng-currency />
                                    </td>
                                    <td></td>
                                    <td></td>
                                    @* 4/10/2020 TK - I am not sure totals are wanted since there are not multiple years in this grid and we are not summing across funding type dollars *@
                                    @*<th style="text-align: right"> {{noFundingSourceIdentifiedSameEachYear.Value | currency:"$"}}</th>*@
                                </tr>
                            </tbody>
                            @* Sum of all budgets and No Funding Source Identified Yet*@
                            <tbody style="border-top: 2px solid #ddd">
                                <tr>
                                    <td colspan="2">@Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForEstimatedAnnualOperatingCost)</td>
                                    <th style="text-align: right">
                                        {{getTotalTargetedSameEachYear(true) | currency:"$"}}
                                    </th>
                                    <th class="sourcedField" style="text-align: right">
                                    </th>
                                    <th class="sourcedField" style="text-align: right">
                                    </th>
                                    @* 4/10/2020 TK - I am not sure totals are wanted since there are not multiple years in this grid and we are not summing across funding type dollars *@
                                    @*<th style="text-align: right"> {{getTotalSameEachYear() | currency:"$"}}</th>*@
                                </tr>
                            </tbody>
                        </table>
                        <div ng-repeat="projectFundingSourceBudget in getRelevantProjectFundingSourceBudgets() | orderBy:[getFundingSourceName]">
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.ProjectID}}" />
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.FundingSourceID}}" />
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].CostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.CostTypeID}}" />
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].IsRelevant).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.IsRelevant}}" />
                            @*<input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].SecuredAmount).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.SecuredAmount}}" />*@
                            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceBudgets[0].ProjectedAmount).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.ProjectedAmount}}" />
                        </div>
                        <input type="hidden" name="@Html.NameFor(x => x.NoFundingSourceIdentifiedYet).ToString()" value="{{noFundingSourceIdentifiedSameEachYear.Value}}" />
                    </div>
                    <div ng-repeat="projectRelevantCostType in AngularModel.ProjectRelevantCostTypes">
                        <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].CostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.CostTypeID}}" />
                        <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].CostTypeName).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.CostTypeName}}" />
                        <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.ProjectID}}" />
                        <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].ProjectRelevantCostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.ProjectRelevantCostTypeID}}" />
                        <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].IsRelevant).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.IsRelevant}}" />
                    </div>

                    <div class="form-group" ng-show="getRelevantCostTypes().length > 0">
                        <p>
                            <label ng-if="budgetVariesByYear()" class="control-label">5. Confirm this summary of your @ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel()'s @ViewDataTyped.FieldDefinitionForEstimatedTotalCost.GetFieldDefinitionLabel()</label>
                            <label ng-if="budgetSameEachYear()" class="control-label">5. Confirm this summary of your @ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel()'s @ViewDataTyped.FieldDefinitionForEstimatedAnnualOperatingCost.GetFieldDefinitionLabel()</label>
                        </p>
                        <div style="margin-left: 20px; margin-right: 20px;">
                            <table class="table table-bordered table-condensed" style="overflow: scroll;">
                                <tr class="summaryTableHeader">
                                    <th>@Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForProjectedFunding)</th>
                                    <th>@Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForNoFundingSourceIdentified)</th>
                                    <th ng-if="budgetVariesByYear()">@Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForEstimatedTotalCost, "TOTAL")</th>
                                    <th ng-if="budgetSameEachYear()">@Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForEstimatedAnnualOperatingCost, "TOTAL")</th>
                                </tr>
                                <tr ng-if="budgetVariesByYear()" class="summaryTableRow">

                                    <td>{{ getTotalTargetedForCalendarYear() | currency:"$" }}</td>
                                    <td>{{ getNoFundingSourceIdentifiedTotalForCalendarYear() | currency:"$"}}</td>
                                    <td>{{ getTotalVariesByYear() | currency:"$"}}</td>
                                </tr>
                                <tr ng-if="budgetSameEachYear()" class="summaryTableRow">
                                    <td>{{ getTotalTargetedSameEachYear() | currency:"$" }}</td>
                                    <td>{{ getTotalNoFundingIdentifiedSameEachYear() | currency:"$"}}</td>
                                    <td>{{ getTotalSameEachYear() | currency:"$"}}</td>
                                </tr>
                            </table>
                        </div>
                    </div>
                
                    @if (ViewDataTyped.ViewEnum == ProjectFundingSourceBudgetViewEnum.Update)
                    {
                        <div class="form-group">
                            <label ng-if="getRelevantCostTypes().length == 0" class="control-label">3. Enter any comments about the changes made to this @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()'s budget.</label>
                            <label ng-if="getRelevantCostTypes().length > 0" class="control-label">6. Enter any comments about the changes made to this @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()'s budget.</label>
                            <div style="margin-left: 20px">@Html.TextAreaWithMaxLengthFor(m => m.ExpectedFundingUpdateNote, new TextAreaForExtensions.TextAreaDimensions(null, 3), "Enter comment", new List<string> { "form-control" })</div>
                        </div>
                    }
                </div>

                <input type="hidden" name="@Html.NameFor(x => x.FundingTypeID)" value="{{selectedFundingTypeID}}" />


                if (ViewDataTyped.ViewEnum == ProjectFundingSourceBudgetViewEnum.Create)
                {
                    <div class="row">
                        <hr />
                        <div style="text-align: right; white-space: nowrap">
                            <button type="submit" class="btn btn-xs btn-firma" title="Save changes made on this page" value="false" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save</button>
                            <button type="submit" class="btn btn-xs btn-firma" title="Save changes and continue to next page" value="true" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save &amp; Continue<span class="glyphicon glyphicon-chevron-right"></span></button>
                        </div>
                    </div>
                }

                if (ViewDataTyped.ViewEnum == ProjectFundingSourceBudgetViewEnum.Update)
                {
                    if (ViewDataTyped.UpdateShowApproveAndReturnButton)
                    {
                        <hr />
                        <div class="row form-group">
                            <div class="col-md-3">@Html.LabelWithSugarFor(x => x.Comments)</div>
                            <div class="col-md-9">
                                @Html.TextAreaFor(x => x.Comments, new Dictionary<string, object> { { "style", "width: 100%" }, { "class", "form-control" } })
                            </div>
                        </div>
                    }
                    <hr />

                     SectionComments.RenderPartialView(Html, ViewDataTyped.SectionCommentsViewData); 

                    <table class="summaryLayout" style="width: 100%">
                        <tr>
                            <td>
                                @ModalDialogFormHelper.ModalDialogFormLink("revert-button", "Revert Current Page", ViewDataTyped.RefreshUrl, "Refresh this section", 500, "Continue", "Continue", "Cancel", new List<string> { "btn btn-xs btn-firma" }, null, null, null, "Undo all changes on this page", ModalDialogFormHelper.DisabledState.NotDisabled)
                                @if (ViewDataTyped.ProjectUpdateStatusIsBudgetsUpdated)
                                {
                                    @ModalDialogFormHelper.ModalDialogFormLink("diff-link-id", "Show Changes", ViewDataTyped.DiffUrl, string.Format("Changes to {0} Budget", FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()), 800, "hidden-save-button", string.Empty, "Close", new List<string> { "btn btn-xs btn-firma" }, null, null, null)
                                }
                            </td>
                            <td style="text-align: right; white-space: nowrap">
                                <button type="submit" class="btn btn-xs btn-firma" title="Save changes made on this page" value="false" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save</button>
                                <button type="submit" class="btn btn-xs btn-firma" title="Save changes and continue to next page" value="true" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
                            </td>
                        </tr>
                    </table>
                }

                if (ViewDataTyped.ViewEnum == ProjectFundingSourceBudgetViewEnum.Edit)
                {
                    <div class="row">
                        <hr />
                        <div style="text-align: right; white-space: nowrap">
                            <button type="submit" class="btn btn-xs btn-firma" title="Save changes" value="true" name="@Html.NameFor(x => x.ShouldSaveChanges)">Save</button>
                            <button type="submit" class="btn btn-xs btn-firma" title="Cancel changes and return to project detail" value="false" name="@Html.NameFor(x => x.ShouldSaveChanges)">Cancel</button>
                        </div>
                    </div>
                }

            }
        </div>
    </div>
</div>
