@*-----------------------------------------------------------------------
    <copyright file="Edit.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@inherits ProjectFirma.Web.Views.TaxonomyTierPerformanceMeasure.Edit
<script type="text/javascript">
    // <![CDATA[
    angular.module("EditAngularApp", []).controller("TaxonomyTierPerformanceMeasureController", function($scope)
    {
        $scope.AngularModel = @Html.Raw(JObject.FromObject(Model));
        $scope.AngularViewData = @Html.Raw(JObject.FromObject(ViewDataTyped));
        $scope.TaxonomyTierToAdd = null;

        $scope.filteredTaxonomyTiers = function()
        {
            var usedTaxonomyTierIDs = _.map($scope.AngularModel.TaxonomyTierPerformanceMeasures, function(p) { return p.TaxonomyTierID; });
            var filter = _.filter($scope.AngularViewData.AllTaxonomyTiers, function(f) { return !_.contains(usedTaxonomyTierIDs, f.TaxonomyTierID); });
            return filter;
        };

        $scope.getTaxonomyTierName = function(taxonomyTierPerformanceMeasure)
        {
            var programToFind = $scope.getTaxonomyTier(taxonomyTierPerformanceMeasure.TaxonomyTierID);
            return programToFind.DisplayName;
        };

        $scope.getTaxonomyTier = function(programId) { return _.find($scope.AngularViewData.AllTaxonomyTiers, function(f) { return programId == f.TaxonomyTierID; }); };

        $scope.addTaxonomyTier = function()
        {
            if ($scope.TaxonomyTierToAdd != null)
            {
                var newTaxonomyTierPerformanceMeasureJson = {
                    TaxonomyTierID: $scope.TaxonomyTierToAdd.TaxonomyTierID,
                    PerformanceMeasureID: $scope.AngularViewData.PerformanceMeasure.PerformanceMeasureID
                };
                $scope.AngularModel.TaxonomyTierPerformanceMeasures.push(newTaxonomyTierPerformanceMeasureJson);
                $scope.TaxonomyTierToAdd = null;
            }
        };

        $scope.deleteTaxonomyTier = function(program)
        {
            Sitka.Methods.removeFromJsonArray($scope.AngularModel.TaxonomyTierPerformanceMeasures, program);
        };
    });
    angular.bootstrap(jQuery("#EditTaxonomyTiersAngularApp"), ["EditAngularApp"]);
    // ]]>
</script>

<div class="validationError">
    @Html.ValidationSummary()
</div>

<div style="font-weight: bold; margin-bottom: 20px">@ViewDataTyped.TaxonomyTierDisplayNamePluralized Associated with @MultiTenantHelpers.GetPerformanceMeasureName()</div>
<div id="EditTaxonomyTiersAngularApp" ng-controller="TaxonomyTierPerformanceMeasureController">
    <div class="form-group">
        <label class="control-label">
            @ViewDataTyped.TaxonomyTierDisplayName to Add:
        </label>
        <div class="input-group">
            <select class="form-control" ng-model="TaxonomyTierToAdd" ng-options="program.DisplayName for program in filteredTaxonomyTiers()">
                <option value="">Choose One</option>
            </select>
            <span class="input-group-btn">
                <button class="btn btn-firma" type="button" ng-click="addTaxonomyTier()"><span class="glyphicon glyphicon-plus"></span> Add</button>
            </span>
        </div>
    </div>

    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-xs-12">
                @Html.LabelWithSugarFor(ViewDataTyped.GetFieldDefinitionForTaxonomyTier(), LabelWithSugarForExtensions.DisplayStyle.HelpIconWithLabel)
            </div>
        </div>
        <div class="form-group" ng-repeat="programPerformanceMeasure in AngularModel.TaxonomyTierPerformanceMeasures | orderBy:getTaxonomyTierName">
            <div class="col-xs-12">
                <span class="glyphicon glyphicon-trash blue" title="Remove '{{programPerformanceMeasure.DisplayName}}'" alt="Remove '{{programPerformanceMeasure.DisplayName}}'" ng-click="deleteTaxonomyTier(programPerformanceMeasure)" style="cursor: pointer"></span>
                {{getTaxonomyTierName(programPerformanceMeasure)}}
            </div>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        <input ng-repeat="programPerformanceMeasure in AngularModel.TaxonomyTierPerformanceMeasures" type="hidden" name="@Html.NameFor(x => x.TaxonomyTierPerformanceMeasures[0].TaxonomyTierID).ToString().Replace("0", "{{$index}}")" value="{{programPerformanceMeasure.TaxonomyTierID}}">
        <input ng-repeat="programPerformanceMeasure in AngularModel.TaxonomyTierPerformanceMeasures" type="hidden" name="@Html.NameFor(x => x.TaxonomyTierPerformanceMeasures[0].PerformanceMeasureID).ToString().Replace("0", "{{$index}}")" value="{{programPerformanceMeasure.PerformanceMeasureID}}">
    }
</div>
