@*-----------------------------------------------------------------------
<copyright file="Edit.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.PerformanceMeasure.Edit

<style>.radio-inline {
     padding-top: 0 !important;
 }</style>

@using (Html.BeginForm())
{
<div class="form-horizontal">
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.Label("Name")
        </div>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.PerformanceMeasureDisplayName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PerformanceMeasureDisplayName)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.PerformanceMeasureTypeID)
        </div>
        <div class="col-sm-9">
            @Html.DropDownListFor(m => m.PerformanceMeasureTypeID, ViewDataTyped.PerformanceMeasureTypes, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PerformanceMeasureTypeID)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.MeasurementUnitTypeID)
        </div>
        <div class="col-sm-9">
            @Html.DropDownListFor(m => m.MeasurementUnitTypeID, ViewDataTyped.MeasurementUnitTypes, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.MeasurementUnitTypeID)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.IsSummable)
        </div>
        <div class="col-sm-9"><div class="radio-inline">
                <label>@Html.RadioButtonFor(m=>m.IsSummable, true) Yes</label>
            </div><div class="radio-inline">
                <label>@Html.RadioButtonFor(m=>m.IsSummable, false) No</label>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-3 control-label">
            @Html.LabelWithSugarFor(m => m.PerformanceMeasureDefinition)
        </div>
        <div class="col-sm-9">
            <div style="max-height: 600px; overflow-y: auto">
                @Html.TextAreaFor(x => x.PerformanceMeasureDefinition, 6, 0, new { style = "resize:none;", @class = "form-control" })
            </div>
        </div>
    </div>
</div>
    @Html.HiddenFor(m => m.PerformanceMeasureID)
}
