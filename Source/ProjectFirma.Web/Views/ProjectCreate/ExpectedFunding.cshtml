@*-----------------------------------------------------------------------
<copyright file="ExpectedFunding.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirmaModels.Models
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.ProjectCreate.ExpectedFunding

@section JavascriptAndStylesContent
{
    <script src="@Url.Content("~/Views/ProjectCreate/ExpectedFundingController.js")" type="text/javascript"></script>
    <script type="text/javascript">
        // <![CDATA[
        angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
        {
            return {
                AngularModel: @Html.Raw(JObject.FromObject(Model.ViewModelForAngular)),
                AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
            };
        });
        // ]]>
    </script>

}
    <p>
        Enter the expected funding for your @(FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()). You may enter multiple @(FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabelPluralized()).
        For each @(FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel()), provide the amount of funding that has been secured, and the amount that is targeted but not yet secured. If the amount of @FieldDefinitionEnum.SecuredFunding.ToType().GetFieldDefinitionLabel() or @FieldDefinitionEnum.TargetedFunding.ToType().GetFieldDefinitionLabel() is unknown, you can leave the amounts blank.
    </p>

<hr />

@using (Html.BeginForm())
{
<div ng-app="ProjectFirmaApp" ng-controller="ExpectedFundingController">
    <div class="form-group">
        <label class="control-label">
            @Html.Label("Does the " + @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() + " budget vary by year or is it the same?")
        </label>
        <div class="input-group">
            <select ng-model="selectedFundingTypeID"
                    class="selectpicker"
                    data-container="body"
                    data-width="100%">
                <option ng-repeat="fundingType in fundingTypes()"
                        value="{{fundingType.Value}}"
                        ng-selected="selectedFundingTypeID == fundingType.Value"
                        ng-bind="fundingType.Text"></option>
            </select>
            @Html.ValidationMessageFor(m => m.ViewModelForAngular.FundingTypeID)
        </div>
    </div>

    <div class="form-group" ng-if="budgetVariesByYear()">
        <label class="control-label">
            What is your @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()’s @FieldDefinitionEnum.EstimatedTotalCost.ToType().GetFieldDefinitionLabel()?
        </label>
        <div class="input-group">
            <input type="text" name="@Html.NameFor(x => x.EstimatedTotalCost)" ng-model="costs.estimatedTotalCost" class="form-control sitkaCurrency" style="text-align: right;" ng-currency />

            @Html.ValidationMessageFor(m => m.EstimatedTotalCost)
        </div>
    </div>
    <div class="form-group" ng-if="budgetSameEachYear()">
        <label class="control-label">
            What is your @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel()’s @FieldDefinitionEnum.EstimatedAnnualOperatingCost.ToType().GetFieldDefinitionLabel()?
        </label>
        <div class="input-group">
            <input type="text" name="@Html.NameFor(x => x.EstimatedAnnualOperatingCost)" ng-model="costs.estimatedAnnualOperatingCost" class="form-control sitkaCurrency" style="text-align: right;" ng-currency />
            @Html.ValidationMessageFor(m => m.EstimatedAnnualOperatingCost)
        </div>
    </div>

    <hr />

    <div class="form-group">
        <label class="control-label">@FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to Add:</label>
        <div class="input-group">
            <select ng-model="FundingSourceIDToAdd"
                    class="selectpicker"
                    data-live-search="true"
                    data-container="body"
                    title="Select a @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to Add"
                    data-width="70%">
                <option value="null" disabled selected>Select a @FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel() to Add</option>
                <option ng-repeat="fundingSource in filteredFundingSources()"
                        value="{{fundingSource.FundingSourceID}}"
                        ng-selected="FundingSourceIDToAdd == fundingSource.FundingSourceID"
                        ng-bind="fundingSource.DisplayName"
                        data-tokens="{{fundingSource.DisplayName}} {{fundingSource.OrganizationFullName}}"></option>
            </select>
            <span class="input-group-btn">
                <button class="btn btn-firma" type="button" ng-click="addRow()">
                    <span class="glyphicon glyphicon-plus"></span> Add
                </button>
            </span>
        </div>
        <p style="font-size: 12px;">
            @(FieldDefinitionEnum.FundingSource.ToType().GetFieldDefinitionLabel()) not listed?
            @ModalDialogFormHelper.ModalDialogFormLink("Contact support", ViewDataTyped.RequestFundingSourceUrl, "Request Support", 800, "Submit Request", "Cancel", new List<string>(), null, null)
        </p>
    </div>
    <div style="overflow-x: auto" class="form-inline">
        <table class="table" style="margin-top: 20px; overflow: scroll" ng-show="AngularModel.ProjectFundingSourceBudgets.length > 0">
            <tr>
                <th></th>
                <th>@Html.LabelWithSugarFor(FieldDefinitionEnum.FundingSource.ToType())</th>
                <th style="text-align: right">@Html.LabelWithSugarFor(FieldDefinitionEnum.SecuredFunding.ToType())</th>
                <th style="text-align: right">@Html.LabelWithSugarFor(FieldDefinitionEnum.TargetedFunding.ToType())</th>
                <th style="text-align: right">Total</th>
            </tr>
            <tr ng-repeat="projectFundingSourceBudget in AngularModel.ProjectFundingSourceBudgets | orderBy:[getFundingSourceName]">
                <td>
                    <span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteRow(projectFundingSourceBudget)" style="cursor: pointer"></span>
                </td>
                <td ng-bind="getFundingSourceName(projectFundingSourceBudget)"></td>
                <td style="text-align: right">
                    <input type="text" style="text-align: right" ng-model="projectFundingSourceBudget.SecuredAmount" class="sitkaCurrency form-control " ng-currency />
                </td>
                <td style="text-align: right">
                    <input type="text" style="text-align: right" ng-model="projectFundingSourceBudget.TargetedAmount" class="sitkaCurrency form-control" ng-currency />
                </td>
                <th style="text-align: right">
                    {{ getRowTotal(projectFundingSourceBudget) | currency:"$"}}
                </th>
            </tr>
            <tr>
                <th colspan="2">Total</th>
                <th style="text-align: right">
                    {{ getSecuredTotal() | currency:"$"}}
                </th>
                <th style="text-align: right">
                    {{ getTargetedTotal() | currency:"$"}}
                </th>
                <th style="text-align: right">
                    {{ getTotal() | currency:"$"}}
                </th>
            </tr>
        </table>
    </div>

    <input type="hidden" name="@Html.NameFor(x => x.ViewModelForAngular.FundingTypeID)" value="{{selectedFundingTypeID}}" />
    <div ng-repeat="projectFundingSourceBudget in AngularModel.ProjectFundingSourceBudgets | orderBy:[getFundingSourceName]">
        <input type="hidden" name="@Html.NameFor(x => x.ViewModelForAngular.ProjectFundingSourceBudgets[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.ProjectID}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ViewModelForAngular.ProjectFundingSourceBudgets[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.FundingSourceID}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ViewModelForAngular.ProjectFundingSourceBudgets[0].SecuredAmount).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.SecuredAmount}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ViewModelForAngular.ProjectFundingSourceBudgets[0].TargetedAmount).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceBudget.TargetedAmount}}" />
    </div>
    <hr />

    <div style="margin: 10px 0px; padding: 5px 10px;">
        <p>
            <label class="control-label">Summary of Total @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() Costs and Funding:</label>
        </p>
        @* If the Budget Changes per year *@
        <div ng-if="budgetVariesByYear()">
            <div class="row">
                <div class="col-sm-4">@Html.LabelWithSugarFor(FieldDefinitionEnum.EstimatedTotalCost.ToType()):</div>
                <div class="col-sm-3 text-right">
                    <span>
                        {{ costs.estimatedTotalCost | currency:"$"}}
                    </span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">@Html.LabelWithSugarFor(FieldDefinitionEnum.SecuredFunding.ToType()):</div>
                <div class="col-sm-3 text-right">
                    <span>
                        {{ getSecuredTotal() | currency:"$" }}
                    </span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">@Html.LabelWithSugarFor(FieldDefinitionEnum.TargetedFunding.ToType()):</div>
                <div class="col-sm-3 text-right">
                    <span>
                        {{ getTargetedTotal() | currency:"$" }}
                    </span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">@Html.LabelWithSugarFor(FieldDefinitionEnum.NoFundingSourceIdentified.ToType()):</div>
                <div class="col-sm-3 text-right">
                    <span>
                        {{ (costs.estimatedTotalCost - getSecuredTotal() - getTargetedTotal()) | currency:"$"}}
                    </span>
                </div>
            </div>
        </div>
        @* If the Budget Same Each year *@
        <div ng-if="budgetSameEachYear()">
            <div class="row">
                <div class="col-sm-4">@Html.LabelWithSugarFor(FieldDefinitionEnum.EstimatedAnnualOperatingCost.ToType()):</div>
                <div class="col-sm-3 text-right">
                    <span>
                        {{ costs.estimatedAnnualOperatingCost | currency:"$"}}
                    </span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">@Html.LabelWithSugarFor(FieldDefinitionEnum.SecuredFunding.ToType()):</div>
                <div class="col-sm-3 text-right">
                    <span>
                        {{ getSecuredTotal() | currency:"$" }} per year
                    </span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">@Html.LabelWithSugarFor(FieldDefinitionEnum.TargetedFunding.ToType()):</div>
                <div class="col-sm-3 text-right">
                    <span>
                        {{ getTargetedTotal() | currency:"$" }} per year
                    </span>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">@Html.LabelWithSugarFor(FieldDefinitionEnum.NoFundingSourceIdentified.ToType()):</div>
                <div class="col-sm-3 text-right">
                    <span>
                        {{ (costs.estimatedAnnualOperatingCost - getSecuredTotal() - getTargetedTotal()) | currency:"$"}} per year
                    </span>
                </div>
            </div>
        </div>
    </div>
</div>
}

<div class="row">
    <div class="col-xs-12">
        <hr />
        <div class="pull-right">
            <button type="button" class="btn btn-xs btn-firma" onclick="saveForm(false)">Save</button>
            <button type="button" class="btn btn-xs btn-firma" onclick="saveForm(true)">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
        </div>
    </div>
</div>
<script type="text/javascript">
    // <![CDATA[

    jQuery(document).ready(function () {
        HookupCheckIfFormIsDirty(undefined, ".submitProject");
    });

    function saveForm(autoAdvance) {
        var form = jQuery("form");
        // Do not submit if the form
        // does not pass client side validation

        if (!form.valid()) {
            return false;
        }
        form.append('<input type="hidden" name="@Html.NameFor(x => x.AutoAdvance)" value=' + autoAdvance + ' />');
        var noMeasuresDiv = jQuery("#ExplanationForNoMeasuresDiv");
        noMeasuresDiv.appendTo(form);

        form.submit();
    }

    // ]]>
</script>