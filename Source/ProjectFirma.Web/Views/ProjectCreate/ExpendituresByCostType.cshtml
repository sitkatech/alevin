@*-----------------------------------------------------------------------
    <copyright file="ExpendituresByCostType.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of@ViewDataTyped.ProjectFieldDefinition
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirma.Web.Views.ProjectCreate
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ExpendituresByCostType
@section JavascriptAndStylesContent
{
    <script src="@Url.Content("~/Views/ProjectCreate/ExpendituresByCostTypeController.js")" type="text/javascript"></script>
    <script type="text/javascript">
        // <![CDATA[
        angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
        {
            return {
                AngularModel: @Html.Raw(JObject.FromObject(Model)),
                AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
            };
        });
        jQuery(document).ready(function() { HookupCheckIfFormIsDirty(undefined, ".submitProject"); });
        // ]]>
    </script>
}

To enter your @(ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel())'s annual expenditures by @(ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel()) and @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabel(). If the @(ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel()) has no expenditures to report in any year provide and explanation.

<hr />
@using (Html.BeginForm())
{
    @Html.HiddenFor(m => m.ProjectID);
<div ng-app="ProjectFirmaApp" id="EditFundingSourceExpendituresApp" ng-controller="ExpendituresByCostTypeController">
    <div class="form-group">
        <label>1. Are there any years with no expenditures to report?</label>
        <a style="cursor: pointer" ng-click="selectAllYears(true)">Select All</a> |
        <a style="cursor: pointer" ng-click="selectAllYears(false)">Unselect All</a>
        <div>
            <label ng-repeat="projectExemptYear in AngularModel.ProjectExemptReportingYears | orderBy:'CalendarYear'" style="padding-right: 10px">
                <input type="checkbox" ng-model="projectExemptYear.IsExempt" /> <span ng-bind="projectExemptYear.CalendarYearDisplay"></span>
            </label>
        </div>
        @Html.TextAreaFor(x => x.Explanation, new Dictionary<string, object> { { "style", "width:100%" }, { "placeholder", "Explanation here" }, { "ng-model", "AngularModel.Explanation" }, { "class", "form-control" } })
    </div>
    <div class="form-group">
        <label class="control-label">2. Select the @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabelPluralized() that are relevant to the  @ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel().</label>
        <br />
        <label ng-repeat="costType in AngularModel.ProjectRelevantCostTypes | orderBy:'CostTypeName'" style="padding-right: 10px">
            <input type="checkbox" ng-model="costType.IsRelevant" ng-click="addRemoveCostTypeFromExpenditures()" /> <span ng-bind="costType.CostTypeName"></span>
        </label>
    </div>
    <div ng-show="getRelevantCostTypes().length === 0">
        <p class="systemText">You need to select at least one @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabel() to enter expenditures.</p>
    </div>
    <div ng-show="getRelevantCostTypes().length > 0">
        <div class="form-group">
            <div style="display: inline-block; vertical-align: top">
                <label>3. Identify the @ViewDataTyped.FieldDefinitionForProject.GetFieldDefinitionLabel()'s  @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabelPluralized(). You can add more than one.</label>
            </div>
            <br />
            <div class="input-group" style="padding-bottom: 5px;">
                <select ng-model="fundingSourceIDToAdd"
                        class="selectpicker"
                        data-live-search="true"
                        data-container="body"
                        title="Select a @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() to Add"
                        data-width="70%">
                    <option value="null" disabled selected>Select a @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() to Add</option>
                    <option ng-repeat="fundingSource in filteredFundingSources()"
                            value="{{fundingSource.FundingSourceID}}"
                            ng-selected="fundingSourceIDToAdd == fundingSource.FundingSourceID"
                            ng-bind="fundingSource.DisplayName"
                            data-tokens="{{fundingSource.DisplayName}} {{fundingSource.OrganizationFullName}} "></option>
                </select>
                <button class="btn btn-firma" type="button" style="margin-left: 5px;" ng-click="addRow()">Add</button>
                <span style="vertical-align: middle; display: inline-block; margin-left: 5px">
                    Not listed?
                    @ModalDialogFormHelper.ModalDialogFormLink("Contact support", ViewDataTyped.RequestFundingSourceUrl, "Request Support", 800, "Submit Request", "Cancel", new List<string>(), null, null)
                </span>
                <br />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label">4. Enter expenditures for each year, @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel(), and @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabel(). If there is no amount to report, enter a zero ($0). </label>
        </div>
        <div>
            <p style="margin-left: 20px" class="systemText" ng-show="getAllUsedFundingSourceIds().length === 0">Add a @ViewDataTyped.FieldDefinitionForFundingSource.GetFieldDefinitionLabel() to start entering expenditures</p>
            <table class="table-responsive table-condensed" style="display: block; overflow: auto;" ng-show="getAllUsedFundingSourceIds().length > 0">
                <thead>
                    <tr>
                        <th style="white-space: nowrap" colspan="2">@Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForFundingSource)</th>
                        <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right; vertical-align: top">
                            <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$first" title="Add Next Year '{{calendarYear + 1}}'" alt="Add Next Year '{{calendarYear + 1}}'" style="cursor: pointer"></span>
                            <span ng-bind="calendarYear"></span>
                            <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$last" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear - 1}}'" style="cursor: pointer"></span>
                        </th>
                        <th style="text-align: right">Total</th>
                    </tr>
                </thead>
                <tbody ng-repeat="fundingSourceID in getAllUsedFundingSourceIds() | orderBy:[getFundingSourceNameById]" style="border-top: 2px solid #ddd">
                    <tr>
                        <td style="width: 30px; min-width: 30px;"><span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteFundingSourceRow(fundingSourceID)" style="cursor: pointer;"></span></td>
                        <td colspan="{{getCalendarYearRange().length + 2}}"><label class="control-label"><span ng-bind="getFundingSourceNameById(fundingSourceID)"></span></label></td>
                    </tr>
                    @* Expenditure Entry Rows *@
                    <tr ng-repeat="projectFundingSourceExpenditure in getProjectFundingSourceExpenditureRowsForFundingSource(fundingSourceID) | orderBy:[getFundingSourceName]">
                        <td style="width: 30px; min-width: 30px;"></td>
                        <td ng-bind="getCostTypeName(projectFundingSourceExpenditure)" />
                        <td style="text-align: right;" ng-repeat="calendarYearExpenditure in projectFundingSourceExpenditure.CalendarYearExpenditures | orderBy:'CalendarYear'">
                            <input type="text" ng-model="calendarYearExpenditure.MonetaryAmount" class="sitkaCurrency form-control" ng-currency />
                        </td>
                        <th style="text-align: right"> {{getExpenditureTotalForRow(projectFundingSourceExpenditure) | currency:"$"}}</th>
                    </tr>
                    @* Sum of expenditures for funding source*@
                    <tr>
                        <td style="width: 30px; min-width: 30px;"></td>
                        <th style="white-space: nowrap">
                            All @ViewDataTyped.FieldDefinitionForCostType.GetFieldDefinitionLabelPluralized()
                        </th>
                        <th style="text-align: right;" ng-repeat="calendarYear in getCalendarYearRange()">
                            <span> {{getExpenditureTotalForFundingSourceAndCalendarYear(fundingSourceID, calendarYear) | currency:"$"}}</span>
                        </th>
                        <th style="text-align: right"> {{getExpenditureTotalForFundingSource(fundingSourceID) | currency:"$"}}</th>
                    </tr>
                </tbody>
                <tbody style="border-top: 2px solid #ddd">
                    <tr>
                        <td colspan="2"><label class="control-label">Total Expenditures</label></td>
                        <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right"> {{getExpenditureTotalForCalendarYear(calendarYear) | currency:"$"}}</th>
                        <th style="text-align: right"> {{getExpenditureTotalForCalendarYear() | currency:"$"}}</th>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div ng-repeat="projectFundingSourceExpenditure in getRelevantProjectFundingSourceExpenditures()">
        <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.ProjectID}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.FundingSourceID}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.CostTypeID}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].IsRelevant).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.IsRelevant}}" />
        <div ng-repeat="calendarYearExpenditure in projectFundingSourceExpenditure.CalendarYearExpenditures | orderBy:'CalendarYear'">
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].CalendarYear).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.CalendarYear}}" />
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].MonetaryAmount).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.MonetaryAmount}}" />
        </div>
    </div>
    <div ng-repeat="projectExemptYear in AngularModel.ProjectExemptReportingYears">
        <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].CalendarYear).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.CalendarYear}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].CalendarYearDisplay).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.CalendarYearDisplay}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.ProjectID}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].ProjectExemptReportingYearID).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.ProjectExemptReportingYearID}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].IsExempt).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.IsExempt}}" />
    </div>
    <div ng-repeat="projectRelevantCostType in AngularModel.ProjectRelevantCostTypes">
        <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].CostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.CostTypeID}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].CostTypeName).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.CostTypeName}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.ProjectID}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].ProjectRelevantCostTypeID).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.ProjectRelevantCostTypeID}}" />
        <input type="hidden" name="@Html.NameFor(x => x.ProjectRelevantCostTypes[0].IsRelevant).ToString().Replace("0", "{{$index}}")" value="{{projectRelevantCostType.IsRelevant}}" />
    </div>
    <div class="row">
        <div style="text-align: right; white-space: nowrap">
            <button type="submit" class="btn btn-xs btn-firma" title="Save changes made on this page" value="false" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save</button>
            <button type="submit" class="btn btn-xs btn-firma" title="Save changes and continue to next page" value="true" name="@Html.NameFor(x => x.AutoAdvance)" ng-disabled="pmForm.$invalid">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
        </div>
    </div>
</div>
}
