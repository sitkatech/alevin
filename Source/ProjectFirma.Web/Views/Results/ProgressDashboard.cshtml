@*-----------------------------------------------------------------------
    <copyright file="ProgressDashboard.cshtml" company="Tahoe Regional Planning Agency & Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency & Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common
@using ProjectFirma.Web.Views.Shared
@inherits ProjectFirma.Web.Views.Results.ProgressDashboard

<style>
    .pageTitle {
        text-transform: uppercase;
        font-weight: bold;
        font-size: 35px;
    }

    .progressOverviewIcon img {
        margin: auto;
        max-width: 85px;
    }

    .progressOverviewNumber, .acresControlledCardNumber, .arcesControlledDetailNumber {
        font-weight: bold;
        font-size: 45px;
    }

    .progressOverviewNumber {
        line-height: 36px;
        margin-bottom: 15px;
    }

    .progressOverviewLabel {
        text-transform: uppercase;
        font-size: 20px
    }

    .progressOverviewLabel div {
        max-width: 200px;
        margin: auto;
    }

    .progress {
        margin-bottom: 0;
        height: 50px;
        border-radius: 0;
    }
    .progressBarMinMaxNumbers {
        font-size: 24px;
        font-weight: bold;
    }
    .progress-bar {
        @*background-color: #5D69B1;*@
        background-color: #0E3F77;
    }

    .pageTitleDivider {
        border-left: 3px solid #333;
        margin-right: 1rem;
        margin-left: 1rem;
        height: 30px;
    }



    .acresControlledCardWrapper {
        margin-right: auto;
        margin-left: auto;
        margin-bottom: 25px;
        font-size: 24px;
    }

    .acresControlledCard {
        color: white;
        @*background-color: #446a7c;*@
        @*background-color: #0F4075;
        background-color: #0E3F77;*@
        @*background-color: #00849C;*@
        background-color: #666FAF;
        height: 150px;
        border-radius: 4px;
        padding: 0 20px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        text-align: center;
        align-items: center;
    }
    .acresControlledCard div {
        display: flex;
        align-items: center;
        margin: auto;
        flex-basis: 33%;
    }

    .acresControlledCardLabel {
        flex-basis: 40% !important;
    }

    .acresControlledCardNumber {
        line-height: 45px;
        align-items: flex-start !important;
    }

    .acresControlledChartWrapper {
        border: #D9D9D9 4px solid;
        padding: 5px;
        border-radius: 5px;
    }

    .acresControlledLegend {
        margin-right: 5px;
        margin-left: 5px;
    }

    .acresControlledLegend div {
        padding: 0;
    }

    .acresControlledLegend .acresCompletedLegend, .acresControlledLegend .acresInConstructionLegend, .acresControlledLegend .acresPlannedLegend {
        height: 15px;
        width: 20px;
        display: inline-block;
        margin-right: 5px;
    }

    .acresControlledLegend .col-xs-3 {
        text-align: right;
    }

    .acresControlledLegend br {
        display: none;
    }

    .acresCompletedLegend {
        background-color: #00849C;
    }

    .acresInConstructionLegend {
        background-color: #30ACBB;
    }

    .acresPlannedLegend {
        background-color: #A3D6D7;
    }

    .chartTitle {
        font-size: 20px;
        width: 75%;
        min-height: 46.4px; @* 2 line heights *@
    }

    .leftHandChart {
        margin-left: auto;
        margin-right: auto;
        padding-left: 0;
        padding-right: 0;
    }

    .rightHandChart {
        margin-left: auto;
        margin-right: auto;
        page-break-inside: avoid;
        padding-left: 0;
        padding-right: 0;
    }

    .topRowChart {
        padding-bottom: 15px;
    }

    .bottomRowChart {
        padding-top: 0;
        padding-bottom: 15px;
    }

    .chartWithOverlay {
        position: relative;

    }
    .overlay {
        width: 100%;
        height: 100px;
        position: absolute;
        top: 200px;
        left: 0;
        text-align: center;
        font-size: 20px;
        font-weight: bold;
        padding-left: 10px;
    }

    .arcesControlledDetailNumber {
        line-height: 50px
    }

    .legendTableWithScroll {
        overflow-y: auto;
        max-height: 366px;
    }

</style>

<style type="text/css" media="only screen and (min-width: 452px)">
    .acresControlledCardRow, .acresControlledChartRow {
        width: 85%;
        margin: auto;
    }
    .acresControlledChartRow {
        margin-bottom: 15px;
    }
</style>

<style type="text/css" media="only screen and (min-width: 768px)">
    .progressOverviewLabel div {
        max-width: 150px;
        margin: auto;
    }

    .acresControlledLegend br {
        display: block;
    }

    .acresControlledCard {
        height: 180px;
    }

        .acresControlledCard div {
            display: flex;
            align-items: center;
            margin: auto;
            flex-basis: 25%;
        }

    .legendSpacer {
        min-height: 46.4px;
    }
</style>
<style type="text/css" media="only screen and (max-width: 767px)">
    .pageTitle span {
        padding: 5px 0;
        display: block;
    }

        .pageTitle span:first-of-type {
            border-bottom: 3px solid #333;
            padding-bottom: 6px;
            width: 305px;
        }

    .pageTitle .pageTitleDivider {
        display: none;
    }
</style>

<style type="text/css" media="only screen and (min-width: 992px)">
    .leftHandChart {
        padding-right: 15px;
    }

    .rightHandChart {
        padding-left: 15px;
    }

    .topRowChart {
        padding-bottom: 15px;
    }

    .bottomRowChart {
        padding-top: 15px;
    }
</style>

<style type="text/css" media="only screen and (min-width: 768px) and (max-width: 992px)">
    .acresControlledCardLabel {
        flex-basis: 50% !important;
    }

    .acresControlledCardNumber {
        flex-basis: 25% !important;
    }
</style>

<div class="row">
    <div class="col-xs-12" style="margin-bottom: 20px;">
        @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewPageContentViewData); }
    </div>

</div>
<div class="row" style="text-align: center; margin: auto">
    <div class="col-xs-6 col-sm-3">
        <div class="progressOverviewIcon">
            <img class="img-responsive" src="~/Content/img/SSMPProjectTracker/progress-dashboard-checklist.png" />
        </div>
        <div class="progressOverviewNumber">@ViewDataTyped.ProjectCount</div>
        <div class="progressOverviewLabel">
            <div>Projects</div>
        </div>
    </div>
    <div class="col-xs-6 col-sm-3">
        <div class="progressOverviewIcon">
            <img class="img-responsive" style="padding: 10px" src="~/Content/img/SSMPProjectTracker/progress-dashboard-money-tree.png" />
        </div>
        <div class="progressOverviewNumber">@ViewDataTyped.FundsCommittedToProgram M</div>
        <div class="progressOverviewLabel">
            <div>Funds Committed to Program</div>
        </div>
    </div>
    <div class="col-xs-6 col-sm-3">
        <div class="progressOverviewIcon">
            <img class="img-responsive" style="padding: 15px" src="~/Content/img/SSMPProjectTracker/progress-dashboard-partnership.png" />
        </div>
        <div class="progressOverviewNumber">@ViewDataTyped.PartnershipCount</div>
        <div class="progressOverviewLabel">
            <div>Partnerships</div>
        </div>
    </div>
    <div class="col-xs-6 col-sm-3">
        <div class="progressOverviewIcon">
            <img class="img-responsive" style="padding: 10px" src="~/Content/img/SSMPProjectTracker/progress-dashboard-group.png" />
        </div>
        <div class="progressOverviewNumber">@ViewDataTyped.CommunityEngagementCount</div>
        <div class="progressOverviewLabel">
            <div>Community Engagement Meetings</div>
        </div>
    </div>
</div>
<div style="margin-top: 75px">
    <h2 class="pageTitle"><span>Acres Controlled</span><span class="pageTitleDivider"></span><span>By The Numbers</span></h2>
    <div class="row" style="margin-top: 40px;">
        <div class="col-xs-12 col-sm-3" style="text-align: center">
            <div class="progressOverviewNumber">@ViewDataTyped.TotalAcresControlled.ToGroupedNumeric()</div>
            <div style="text-transform: uppercase; font-size: 20px">
                <div>Total Acres Controlled</div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-9">
            <div class="progress">
                <div class="progress-bar" role="progressbar" style="width: @(ViewDataTyped.AcresControlledPercent)%" aria-valuenow="@ViewDataTyped.TotalAcresControlled"
                     aria-valuemin="0" aria-valuemax="@ViewDataTyped.AcresControlledTarget"></div>

            </div>
            <div class="progressBarMinMaxNumbers">
                <span>0</span>
                <span class="pull-right">@ViewDataTyped.AcresControlledTarget.ToGroupedNumeric()</span>
            </div>
        </div>
        <div class="col-xs-12" style="margin-top: 40px; margin-bottom: 25px">
            @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.AcresControlledByTheNumbersViewPageContentViewData); }
        </div>
    </div>
</div>

<div>
    <div class="row acresControlledCardRow">
        <div class="col-xs-12 col-sm-6 acresControlledCardWrapper">
            <div class="acresControlledCard">
                <div class="acresControlledCardLabel">Area Treated for Dust Suppression</div>
                <div class="acresControlledCardNumber">@ViewDataTyped.AreaTreatedForDustSuppression.ToGroupedNumeric()</div>
                <div>Acres</div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-6 acresControlledCardWrapper">
            <div class="acresControlledCard">
                <div class="acresControlledCardLabel">Area Treated for Vegetation Enhancement</div>
                <div class="acresControlledCardNumber">@ViewDataTyped.AreaTreatedForVegetationEnhancement.ToGroupedNumeric()</div>
                <div>Acres</div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-6 acresControlledCardWrapper">
            <div class="acresControlledCard">
                <div class="acresControlledCardLabel">Aquatic Habitat Created</div>
                <div class="acresControlledCardNumber">@ViewDataTyped.AquaticHabitatCreated.ToGroupedNumeric()</div>
                <div>Acres</div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-6 acresControlledCardWrapper">
            <div class="acresControlledCard">
                <div class="acresControlledCardLabel">Endangered & Special Status Species Habitat Created</div>
                <div class="acresControlledCardNumber">@ViewDataTyped.EndangeredSpeciesHabitatCreated.ToGroupedNumeric()</div>
                <div>Acres</div>
            </div>
        </div>
    </div>
</div>

<div style="margin-top: 75px">
    <h2 class="pageTitle" style="margin-bottom: 25px">Acres Controlled</h2>
    <div class="row">
        <div class="col-xs-12" style="margin-bottom: 20px;">
            @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.AcresControlledPieChartViewPageContentViewData); }
        </div>
    </div>
    <div class="row acresControlledChartRow">
        <div class="col-xs-12">
            <div class="col-md-6 leftHandChart topRowChart">
                <div class="chartPanel acresControlledChartWrapper">
                    @if (ViewDataTyped.DustSuppressionHasData)
                    {
                        <div class="chartWithOverlay">
                            @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.DustSuppressionPieChart); }
                            <div class="overlay">
                                @if (ViewDataTyped.DustSuppressionValues.All(x => x > 0)
                                     || (ViewDataTyped.DustSuppressionValues[0] > 0 && ViewDataTyped.DustSuppressionValues[1] > 0)
                                     || (ViewDataTyped.DustSuppressionValues[0] > 0 && ViewDataTyped.DustSuppressionValues[2] > 0)
                                     || (ViewDataTyped.DustSuppressionValues[1] > 0 && ViewDataTyped.DustSuppressionValues[2] > 0))
                                {
                                    <div>Total</div>
                                    <div>@(ViewDataTyped.DustSuppressionValues.Sum().ToGroupedNumeric())</div>
                                }
                            </div>
                        </div>

                        <div class="row acresControlledLegend">
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresCompletedLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres Completed</span><br /> @ViewDataTyped.DustSuppressionValues[0].ToGroupedNumeric() acres</div>
                            </div>
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresInConstructionLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres In Construction</span><br /> @ViewDataTyped.DustSuppressionValues[1].ToGroupedNumeric() acres</div>
                            </div>
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresPlannedLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres Planned</span><br /> @ViewDataTyped.DustSuppressionValues[2].ToGroupedNumeric() acres</div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center">
                            <p class="systemText">No Area Treated for Dust Suppression</p>
                        </div>
                    }
                </div>
            </div>
            <div class="col-md-6 rightHandChart topRowChart">
                <div class="chartPanel acresControlledChartWrapper">
                    @if (ViewDataTyped.VegetationEnhancementHasData)
                    {
                        <div class="chartWithOverlay">
                            @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.VegetationEnhancementPieChart); }
                            <div class="overlay">
                                @if (ViewDataTyped.VegetationEnhancementValues.All(x => x > 0)
                                     || (ViewDataTyped.VegetationEnhancementValues[0] > 0 && ViewDataTyped.VegetationEnhancementValues[1] > 0)
                                     || (ViewDataTyped.VegetationEnhancementValues[0] > 0 && ViewDataTyped.VegetationEnhancementValues[2] > 0)
                                     || (ViewDataTyped.VegetationEnhancementValues[1] > 0 && ViewDataTyped.VegetationEnhancementValues[2] > 0))
                                {
                                    <div>Total</div>
                                    <div>@(ViewDataTyped.VegetationEnhancementValues.Sum().ToGroupedNumeric())</div>
                                }
                            </div>

                        </div>
                        <div class="row acresControlledLegend">
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresCompletedLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres Completed</span><br /> @ViewDataTyped.VegetationEnhancementValues[0].ToGroupedNumeric() acres</div>
                            </div>
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresInConstructionLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres In Construction</span><br /> @ViewDataTyped.VegetationEnhancementValues[1].ToGroupedNumeric() acres</div>
                            </div>
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresPlannedLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres Planned</span><br /> @ViewDataTyped.VegetationEnhancementValues[2].ToGroupedNumeric() acres</div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center">
                            <p class="systemText">No Area Treated for Vegetation Enhancement</p>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-xs-12">
            <div class="col-md-6 leftHandChart bottomRowChart">
                <div class="chartPanel acresControlledChartWrapper">
                    @if (ViewDataTyped.AquaticHabitatCreatedHasData)
                    {
                        <div class="chartWithOverlay">
                            @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.AquaticHabitatCreatedPieChart); }
                            <div class="overlay">
                                @if (ViewDataTyped.AquaticHabitatCreatedValues.All(x => x > 0)
                                     || (ViewDataTyped.AquaticHabitatCreatedValues[0] > 0 && ViewDataTyped.AquaticHabitatCreatedValues[1] > 0)
                                     || (ViewDataTyped.AquaticHabitatCreatedValues[0] > 0 && ViewDataTyped.AquaticHabitatCreatedValues[2] > 0)
                                     || (ViewDataTyped.AquaticHabitatCreatedValues[1] > 0 && ViewDataTyped.AquaticHabitatCreatedValues[2] > 0))
                                {
                                    <div>Total</div>
                                    <div>@(ViewDataTyped.AquaticHabitatCreatedValues.Sum().ToGroupedNumeric())</div>
                                }
                            </div>
                        </div>
                        <div class="row acresControlledLegend">
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresCompletedLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres Completed</span><br /> @ViewDataTyped.AquaticHabitatCreatedValues[0].ToGroupedNumeric() acres</div>
                            </div>
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresInConstructionLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres In Construction</span><br /> @ViewDataTyped.AquaticHabitatCreatedValues[1].ToGroupedNumeric() acres</div>
                            </div>
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresPlannedLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres Planned</span><br /> @ViewDataTyped.AquaticHabitatCreatedValues[2].ToGroupedNumeric() acres</div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center">
                            <p class="systemText">No Aquatic Habitat Created</p>
                        </div>
                    }
                </div>
            </div>
            <div class="col-md-6 rightHandChart bottomRowChart">
                <div class="chartPanel acresControlledChartWrapper">
                    @if (ViewDataTyped.EndangeredSpeciesHabitatCreatedHasData)
                    {
                        <div class="chartWithOverlay">
                            @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.EndangeredSpeciesHabitatCreatedPieChart); }
                            <div class="overlay">
                                @if (ViewDataTyped.EndangeredSpeciesHabitatCreatedValues.All(x => x > 0)
                                     || (ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[0] > 0 && ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[1] > 0)
                                     || (ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[0] > 0 && ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[2] > 0)
                                     || (ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[1] > 0 && ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[2] > 0))
                                {
                                    <div>Total</div>
                                    <div>@(ViewDataTyped.EndangeredSpeciesHabitatCreatedValues.Sum().ToGroupedNumeric())</div>
                                }
                            </div>
                        </div>
                        <div class="row acresControlledLegend">
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresCompletedLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres Completed</span><br /> @ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[0].ToGroupedNumeric() acres</div>
                            </div>
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresInConstructionLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres In Construction</span><br /> @ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[1].ToGroupedNumeric() acres</div>
                            </div>
                            <div class="col-xs-12 col-sm-4">
                                <div class="col-xs-3"><span class="acresPlannedLegend"></span></div>
                                <div class="col-xs-9"><span style="font-weight: bold;">Acres Planned</span><br /> @ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[2].ToGroupedNumeric() acres</div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center">
                            <p class="systemText">No Endangered & Special Status Species Habitat Created</p>
                        </div>
                    }

                </div>
            </div>
        </div>
    </div>
</div>

<div style="margin-top: 75px;">
    <h2 class="pageTitle">Area Treated for Dust Suppression</h2>
    <div class="row acresControlledChartRow" style="text-align: center">
        <div class="col-sm-4 col-xs-6">
            <div>Completed</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.DustSuppressionValues[0].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
        <div class="col-sm-4 col-xs-6">
            <div>In Construction</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.DustSuppressionValues[1].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
        <div class="col-sm-4 col-sm-offset-0 col-xs-6 col-xs-offset-3">
            <div>Planned</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.DustSuppressionValues[2].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-7">
            <div id="@(ViewDataTyped.DustSuppressionColumnChart.ChartUniqueName)" >
                <div >
                    @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.DustSuppressionColumnChart); }

                </div>
            </div>
        </div>
        <div class="col-sm-5">
            <div class="legendSpacer"></div>
            <div >
                <label>Total Completed Acres by Project</label>
                <div class="legendTableWithScroll">
                    <table class="table table-condensed table-borderless">
                        <tbody>
                        @foreach (var projectColorAndValue in ViewDataTyped.DustSuppressionProjectToColorAndValue)
                        {
                            <tr>
                                <td>
                                    <div style="background-color: @(projectColorAndValue.Value.Item1); height: 15px; width: 20px; margin-top: 3px;"></div>
                                </td>
                                <td>@projectColorAndValue.Key</td>
                                <td>@projectColorAndValue.Value.Item2 acres</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div style="margin-top: 75px;">
    <h2 class="pageTitle">Area Treated for Vegetation Enhancement</h2>
    <div class="row acresControlledChartRow" style="text-align: center">
        <div class="col-sm-4 col-xs-6">
            <div>Completed</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.VegetationEnhancementValues[0].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
        <div class="col-sm-4 col-xs-6">
            <div>In Construction</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.VegetationEnhancementValues[1].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
        <div class="col-sm-4 col-sm-offset-0 col-xs-6 col-xs-offset-3">
            <div>Planned</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.VegetationEnhancementValues[2].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-7">
            <div id="@(ViewDataTyped.VegetationEnhancementColumnChart.ChartUniqueName)">
                <div>
                    @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.VegetationEnhancementColumnChart); }

                </div>
            </div>
        </div>
        <div class="col-sm-5">
            <div class="legendSpacer"></div>
            <div>
                <label>Total Completed Acres by Project</label>
                <div class="legendTableWithScroll">
                    <table class="table table-condensed table-borderless">
                        <tbody>
                        @foreach (var projectColorAndValue in ViewDataTyped.VegetationEnhancementProjectToColorAndValue)
                        {
                            <tr>
                                <td>
                                    <div style="background-color: @(projectColorAndValue.Value.Item1); height: 15px; width: 20px; margin-top: 3px;"></div>
                                </td>
                                <td>@projectColorAndValue.Key</td>
                                <td>@projectColorAndValue.Value.Item2 acres</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div style="margin-top: 75px;">
    <h2 class="pageTitle">Aquatic Habitat Created</h2>
    <div class="row acresControlledChartRow" style="text-align: center">
        <div class="col-sm-4 col-xs-6">
            <div>Completed</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.AquaticHabitatCreatedValues[0].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
        <div class="col-sm-4 col-xs-6">
            <div>In Construction</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.AquaticHabitatCreatedValues[1].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
        <div class="col-sm-4 col-sm-offset-0 col-xs-6 col-xs-offset-3">
            <div>Planned</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.AquaticHabitatCreatedValues[2].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-7">
            <div id="@(ViewDataTyped.AquaticHabitatCreatedColumnChart.ChartUniqueName)">
                <div>
                    @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.AquaticHabitatCreatedColumnChart); }

                </div>
            </div>
        </div>
        <div class="col-sm-5">
            <div class="legendSpacer"></div>
            <div>
                <label>Total Completed Acres by Project</label>
                <div class="legendTableWithScroll">
                    <table class="table table-condensed table-borderless">
                        <tbody>
                        @foreach (var projectColorAndValue in ViewDataTyped.AquaticHabitatCreatedProjectToColorAndValue)
                        {
                            <tr>
                                <td>
                                    <div style="background-color: @(projectColorAndValue.Value.Item1); height: 15px; width: 20px; margin-top: 3px;"></div>
                                </td>
                                <td>@projectColorAndValue.Key</td>
                                <td>@projectColorAndValue.Value.Item2 acres</td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            </div>


        </div>
    </div>
</div>

<div style="margin-top: 75px;">
    <h2 class="pageTitle">Endangered & Special Status Species Habitat Created</h2>
    <div class="row acresControlledChartRow" style="text-align: center">
        <div class="col-sm-4 col-xs-6">
            <div>Completed</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[0].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
        <div class="col-sm-4 col-xs-6">
            <div>In Construction</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[1].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
        <div class="col-sm-4 col-sm-offset-0 col-xs-6 col-xs-offset-3">
            <div>Planned</div>
            <div class="arcesControlledDetailNumber">@ViewDataTyped.EndangeredSpeciesHabitatCreatedValues[2].ToGroupedNumeric()</div>
            <div>Acres</div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-7">
            <div id="@(ViewDataTyped.EndangeredSpeciesHabitatCreatedColumnChart.ChartUniqueName)">
                <div>
                    @{ ViewGoogleChart.RenderPartialView(Html, ViewDataTyped.EndangeredSpeciesHabitatCreatedColumnChart); }

                </div>
            </div>
        </div>
        <div class="col-sm-5">
            <div class="legendSpacer"></div>
            <div>
                <label>Total Completed Acres by Project</label>
                <div class="legendTableWithScroll">
                    <table class="table table-condensed table-borderless">
                        <tbody>
                            @foreach (var projectColorAndValue in ViewDataTyped.EndangeredSpeciesHabitatCreatedProjectToColorAndValue)
                            {
                                <tr>
                                    <td>
                                        <div style="background-color: @(projectColorAndValue.Value.Item1); height: 15px; width: 20px; margin-top: 3px;"></div>
                                    </td>
                                    <td>@projectColorAndValue.Key</td>
                                    <td>@projectColorAndValue.Value.Item2 acres</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>


        </div>
    </div>
</div>