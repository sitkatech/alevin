@*-----------------------------------------------------------------------
<copyright file="EditProjectLocationSimple.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.BootstrapWrappers
@using ProjectFirma.Web.Models
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirmaModels.Models
@inherits ProjectFirma.Web.Views.Shared.ProjectLocationControls.ProjectLocationSimple

<script type="text/javascript" src="@Url.Content("~/Views/Shared/ProjectLocationControls/ProjectLocationSimpleController.js")"></script>
<script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData",
        function() {
            return {
                "AngularModel": @Html.Raw(JObject.FromObject(Model).ToString(Formatting.None)),
                "AngularViewData":
                    @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular).ToString(Formatting.None)),
            };
        });
    angular.bootstrap(jQuery("[ng-controller=\"ProjectLocationSimpleController\"]"), ["ProjectFirmaApp"]);
    // ]]>
</script>
<style>
    .groupedControl {
        border: solid grey 1px;
        border-radius: 5px;
        margin: 5px;
        padding: 5px;
    }

    #@ViewDataTyped.ViewDataForAngular.MapInitJson.MapDivID {
        height: 500px;
    }
    .noBold {
        font-weight: normal;
    }
</style>

<div class="row">
    <div class="col-xs-12">
        <p>
            Enter your
            @{
                var fieldDefinitionForProject = ViewDataTyped.FieldDefinitionForProject;
            }


            @fieldDefinitionForProject.GetFieldDefinitionLabel()’s approximate location by plotting a point on the map.
            This "Simple" information is used to indicate the general location of your @fieldDefinitionForProject.GetFieldDefinitionLabel() within the region. 
            If your @fieldDefinitionForProject.GetFieldDefinitionLabel()'s location cannot be approximated by a point, provide a brief explanation of the location information in the @Html.DisplayNameFor(m => m.ProjectLocationNotes) field.
        </p>
        
    </div>
</div>
<hr/>

@Html.ValidationSummary()
<div class="row" ng-app="ProjectFirmaApp" ng-controller="ProjectLocationSimpleController">
    <div class="col-xs-12 col-md-5 col-lg-4">
        <form method="POST" action="@ViewDataTyped.MapPostUrl" id="@ViewDataTyped.MapFormID">
            @Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForProjectLocation, LabelWithSugarForExtensions.DisplayStyle.HelpIconOnly)
            <strong>How do you want to specify your simple @ViewDataTyped.FieldDefinitionForProjectLocation.GetFieldDefinitionLabel()?</strong>
            <span><sup>@Html.Raw(BootstrapHtmlHelpers.RequiredIcon)</sup></span>
            <div class="form-group">
                <div class="radio">
                    <label class="noBold">
                        <input type="radio" name="@Html.NameFor(m => m.ProjectLocationSimpleType)"
                               ng-model="AngularModel.ProjectLocationSimpleType"
                               value="@ProjectLocationSimpleTypeEnum.PointOnMap"
                               ng-click="toggleMap()" />
                        Plot a point on the map
                    </label>
                </div>
                @Html.ValidationMessageFor(x => x.ProjectLocationPointX)
            </div>
            <div class="form-group">
                <div class="radio">
                    <label class="noBold">
                        <input type="radio" name="@Html.NameFor(m => m.ProjectLocationSimpleType)"
                               ng-model="AngularModel.ProjectLocationSimpleType"
                               value="@ProjectLocationSimpleTypeEnum.LatLngInput"
                               ng-click="toggleMap()" />
                        Enter lat/lng coordinates (DD)
                    </label>
                </div>
                @Html.ValidationMessageFor(x => x.ProjectLocationPointX)
            </div>
            
            <div class="form-group" ng-show="displayLatLngInputs()">
                <div class="input-group">
                    <div class="input-group-addon">Lat</div>
                    <input class="form-control text-right" type="text" placeholder="Decimal or DMS" name="@Html.NameFor(m => m.ProjectLocationPointY)" ng-model="AngularModel.@Html.NameFor(m => m.ProjectLocationPointY)" ng-change="changedLatLngInput()" ng-blur="checkInputsForDegreeMinutes()" />
                    @Html.ValidationMessageFor(x => x.ProjectLocationPointY)
                </div>
            </div>
            <div class="form-group" ng-show="displayLatLngInputs()">
                <div class="input-group">
                    <div class="input-group-addon">Lng</div>
                    <input class="form-control text-right" type="text" placeholder="Decimal or DMS" name="@Html.NameFor(m => m.ProjectLocationPointX)" ng-model="AngularModel.@Html.NameFor(m => m.ProjectLocationPointX)" ng-change="changedLatLngInput()" ng-blur="checkInputsForDegreeMinutes()" />
                    @Html.ValidationMessageFor(x => x.ProjectLocationPointX)
                </div>
            </div>
            <div class="form-group">
                <div class="radio">
                    <label class="noBold">
                        <input type="radio" name="@Html.NameFor(m => m.ProjectLocationSimpleType)"
                               ng-model="AngularModel.ProjectLocationSimpleType"
                               value="@ProjectLocationSimpleTypeEnum.None"
                               ng-click="toggleMap()" />
                        No Location
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label">@Html.DisplayNameFor(m => m.ProjectLocationNotes)</label>
                <textarea class="form-control" style="resize: none;" name="@Html.NameFor(m => m.ProjectLocationNotes)"
                          ng-model="AngularModel.@Html.NameFor(m => m.ProjectLocationNotes)"></textarea>
                @Html.ValidationMessageFor(m => m.ProjectLocationNotes)
            </div>
            <div ng-show="getProjectLocationProperties()">
                <hr />
                <table class="summaryLayout">
                    <tr>
                        <th colspan="2">Location Information</th>
                    </tr>
                    <tr ng-repeat="(key, value) in getProjectLocationProperties()">
                        <td>{{key}}:</td>
                        <td>{{value}}</td>
                    </tr>
                </table>
            </div>
            
            <hr/>
            <div class="form-group">
                <label class="control-label">
                    @Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForLocationIsPrivate)
                </label>
                <br/>    
                <input type="checkbox" ng-model="AngularModel.LocationIsPrivate" name="@Html.NameFor(m => m.LocationIsPrivate)" value="true" />
                Hide the @fieldDefinitionForProject.GetFieldDefinitionLabel()’s location from most users.
                @* When hand-coding a checkbox input, 'value="true"' is a necessary idiom so that ModelBinder can correctly bind the value of this checkbox.
                Otherwise, the form will attempt to pass the value "on", which ModelBinder is unable to parse.
                Setting value=true does not affect whether or not the checkbox is checked.*@

            </div>
        </form>
    </div>
    <div class="col-xs-12 col-md-7 col-lg-8" id="mapContainer">
        <p>
            To zoom, hold down Shift and drag a rectangle.
        </p>
        <div id="@ViewDataTyped.ViewDataForAngular.MapInitJson.MapDivID"></div>
    </div>
</div>