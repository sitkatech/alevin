@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Models
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Views.Shared.ProjectLocationControls

@inherits EditProjectBoundingBox

@Html.ValidationSummary()

<p>
    Update the custom map extent for this @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel(), which is used to set the zoom level and center of maps that this @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() appears in. The extent for a @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() map is set according to these rules:
    <ul>
        <li>If a custom map extent is provided, the map will always center on the custom extent</li>
        <li>If no custom extent is provided, the map will center on the @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() detailed location</li>
        <li>If no detailed location is provided, the map will center on the @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() simple location</li>
        <li>If no simple location is provided, the map will center on the @FieldDefinitionEnum.Project.ToType().GetFieldDefinitionLabel() geospatialAreas</li>
        <li>If none of the above are provided, the map will display "Location Not Specified"</li>
    </ul>
    To define the map extent, use the rectangle tool in the tool menu to outline the desired map extent for the viewing window.
</p>
<form method="POST" id="@ViewDataTyped.EditProjectBoundingBoxFormID" action="@ViewDataTyped.EditProjectBoundingBoxUrl">
    @Html.HiddenFor(x => x.North)
    @Html.HiddenFor(x => x.South)
    @Html.HiddenFor(x => x.East)
    @Html.HiddenFor(x => x.West)
</form>

<div id="@ViewDataTyped.MapInitJson.MapDivID" style="height: 400px;"></div>

<script type="text/javascript">
    // <![CDATA[
    jQuery(function() {
        var mapInitJson = @Html.Raw(JObject.FromObject(ViewDataTyped.MapInitJson).ToString(Formatting.None)),
            firmaMap = new ProjectFirmaMaps.Map(mapInitJson),
            drawnItems = new L.FeatureGroup(),
            drawControl = new L.Control.Draw({
                edit: {
                    featureGroup: drawnItems
                },
                draw: {
                    // Rectangle only
                    polygon: false,
                    polyline: false,
                    circle: false,
                    marker: false
                }
            });
        firmaMap.map.addControl(drawControl);
        var north = @Html.Raw(Model.North != null ? Model.North.ToString() : "null"),
            south = @Html.Raw(Model.North != null ? Model.South.ToString() : "null"),
            east = @Html.Raw(Model.North != null ? Model.East.ToString() : "null"),
            west = @Html.Raw(Model.North != null ? Model.West.ToString() : "null");

        if (!Sitka.Methods.isUndefinedNullOrEmpty(north) &&
            !Sitka.Methods.isUndefinedNullOrEmpty(south) &&
            !Sitka.Methods.isUndefinedNullOrEmpty(east) &&
            !Sitka.Methods.isUndefinedNullOrEmpty(west)) {
            L.rectangle([[south, west], [north, east]]).addTo(drawnItems);
        }
        firmaMap.map.addLayer(drawnItems);

        function setBoundingBoxValues(north, south, east, west)
        {
            jQuery("#@Html.IdFor(m => m.North)").val(north);
            jQuery("#@Html.IdFor(m => m.South)").val(south);
            jQuery("#@Html.IdFor(m => m.East)").val(east);
            jQuery("#@Html.IdFor(m => m.West)").val(west);
        }

        function setBoundingBox(layer) {
            var bounds = layer.getBounds();
            //var northEast = bounds.getNorthEast().wrap();
            //var southWest = bounds.getSouthWest().wrap();
            var northEast = bounds.getNorthEast();
            var southWest = bounds.getSouthWest();
            setBoundingBoxValues(northEast.lat, southWest.lat, northEast.lng, southWest.lng);
        }

        function removePreviousRegion()
        {
            drawnItems.clearLayers();
            setBoundingBoxValues("", "", "", "");
        }

        firmaMap.map.on("draw:drawstart", removePreviousRegion);
        firmaMap.map.on("draw:deleted", removePreviousRegion);

        firmaMap.map.on("draw:created",
            function(event)
            {
                drawnItems.addLayer(event.layer);
                setBoundingBox(event.layer);
            });
        firmaMap.map.on("draw:edited",
            function(event) { event.layers.eachLayer(function(layer) { setBoundingBox(layer); }); });
    });
    // ]]>
</script>
