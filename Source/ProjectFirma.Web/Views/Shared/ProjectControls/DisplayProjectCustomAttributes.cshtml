@*-----------------------------------------------------------------------
    <copyright file="ProjectCustomAttributes.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
    Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
    <author>Environmental Science Associates</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common
@using ProjectFirmaModels.Models
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.Shared.ProjectControls.DisplayProjectCustomAttributes

<style>
    .projectCustomAttributes div:last-child hr {
        display: none;
        margin: 2em auto;
    }
</style>

@functions
{
    /// <summary>
    /// Mostly just here for debugging
    /// </summary>
    private static string GetSingleProjectCustomAttributeValue(IProjectCustomAttribute projectCustomAttribute)
    {
        var projectCustomAttributeValues = projectCustomAttribute.GetCustomAttributeValues().ToList();
        var projectCustomAttributeValue = projectCustomAttributeValues.SingleOrDefault();
        return projectCustomAttributeValue != null ? projectCustomAttributeValue.AttributeValue : null;
    }
}

<div class="projectCustomAttributes">
    @foreach (var projectCustomAttributeGroup in ViewDataTyped.ProjectCustomAttributeGroups)
    {
        if (ViewDataTyped.ProjectCustomAttributeGroups.Count > 1)
        {
            <h4>@projectCustomAttributeGroup.ProjectCustomAttributeGroupName</h4>
        }
        <div>
            @foreach (var projectCustomAttributeType in projectCustomAttributeGroup.ProjectCustomAttributeTypes.OrderBy(x => x.SortOrder))
            {
                if (ViewDataTyped.ProjectCustomAttributeTypes.Contains(projectCustomAttributeType))
                {
                    var projectCustomAttribute = ViewDataTyped.ProjectCustomAttributes.SingleOrDefault(x => x.ProjectCustomAttributeTypeID == projectCustomAttributeType.ProjectCustomAttributeTypeID);
                    <div class="row form-group-condensed">
                        <div class="projectCustomAttributes col-xs-4 control-label">
                            @if (!string.IsNullOrWhiteSpace(projectCustomAttributeType.ProjectCustomAttributeTypeDescription))
                            {
                                @LabelWithSugarForExtensions.GenerateHelpIconImgTag(projectCustomAttributeType.ProjectCustomAttributeTypeName, projectCustomAttributeType.ProjectCustomAttributeTypeDescription.ToHTMLFormattedString(), projectCustomAttributeType.GetDescriptionUrl(), 300, LabelWithSugarForExtensions.DisplayStyle.HelpIconOnly).ToHTMLFormattedString()
                            }
                            @projectCustomAttributeType.ProjectCustomAttributeTypeName
                        </div>
                        <div class="projectCustomAttributes col-xs-8">
                            @if (projectCustomAttribute != null)
                            {
                                if (projectCustomAttributeType.ProjectCustomAttributeDataType == ProjectCustomAttributeDataType.DateTime)
                                {
                                    @projectCustomAttribute.GetCustomAttributeValues().Single().AttributeValue.ToStringDate()
                                }
                                else if (projectCustomAttributeType.MeasurementUnitType == MeasurementUnitType.Dollars)
                                {
                                    @StringFormats.ParseNullableDecimalFromCurrencyString(GetSingleProjectCustomAttributeValue(projectCustomAttribute)).ToStringCurrency()
                                }
                                else if (projectCustomAttributeType.MeasurementUnitTypeID != null)
                                {
                                    <span>@projectCustomAttribute.GetCustomAttributeValues().Single().AttributeValue</span>
                                    <span>@(projectCustomAttributeType.MeasurementUnitType.LegendDisplayName)</span>
                                }
                                else
                                {
                                    @(string.Join(", ", projectCustomAttribute.GetCustomAttributeValues().Select(x => x.AttributeValue)))
                                }
                            }
                            else
                            {
                                <em class="text-muted">None</em>
                            }
                        </div>
                    </div>
                }
            }
            <hr/>
        </div>
    }
</div>