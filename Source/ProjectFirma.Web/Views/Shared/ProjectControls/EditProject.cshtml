@*-----------------------------------------------------------------------
<copyright file="EditProject.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirma.Web.Views.Shared.ProjectControls
@using LtInfo.Common.HtmlHelperExtensions
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@inherits EditProject

@Html.Raw(ViewDataTyped.EditProjectType.IntroductoryText)

@Html.ValidationSummary()

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-xs-4 control-label">@Html.LabelWithSugarFor(m => m.TaxonomyLeafID, MultiTenantHelpers.GetTaxonomyLeafDisplayNameForProject(), null)</div>
            <div class="col-xs-8">
                @Html.SearchableDropDownListFor(x => x.TaxonomyLeafID, ViewDataTyped.TaxonomyLeafs, string.Format("Select a {0}", MultiTenantHelpers.GetTaxonomyLeafDisplayNameForProject()))
                @Html.ValidationMessageFor(m => m.TaxonomyLeafID)
            </div>
        </div>
        @if (ViewDataTyped.TenantAttribute.EnableSecondaryProjectTaxonomyLeaf)
        {
            <div class="form-group">
                <div class="col-xs-4 control-label">@Html.LabelWithSugarFor(m => m.SecondaryProjectTaxonomyLeafIDs, false)</div>
                <div class="col-xs-8">
                    <div class="input-group" style="margin-bottom: 1em;">
                        <select class="selectpicker" id="secondaryProjectTaxonomyLeafSelectionDropdown" data-live-search="true" data-live-search-placeholder="Search">
                            <option value=""></option>
                            @foreach (var x in ViewDataTyped.TaxonomyLeafs)
                            {
                                <option value="@x.Value">@x.Text</option>
                            }
                        </select>
                        <span class="input-group-btn" id="addSecondaryProjectTaxonomyLeafInputGroupButton">
                            <button class="btn btn-firma" type="button" id="addSecondaryProjectTaxonomyLeafButton">
                                <span class="glyphicon glyphicon-plus"></span>
                                Add
                            </button>
                        </span>
                    </div>
                    <ul id="secondaryProjectTaxonomyLeafSelectionContainer" class="list-unstyled">
                        @foreach (var secondaryProjectTaxonomyLeafID in Model.SecondaryProjectTaxonomyLeafIDs)
                        {
                            <li id="secondaryProjectTaxonomyLeafSelection_@secondaryProjectTaxonomyLeafID">
                                @{ int somthing; }
                                <a href="#" onclick="event.preventDefault();jQuery('#secondaryProjectTaxonomyLeafSelection_@secondaryProjectTaxonomyLeafID').remove();">
                                    <span class="glyphicon glyphicon-trash" style="margin-right: 1em;">
                                    </span>
                                </a>@(ViewDataTyped.TaxonomyLeafs.Where(x => int.TryParse(x.Value, out somthing)).ToDictionary(x => int.Parse(x.Value), x => x.Text)[secondaryProjectTaxonomyLeafID])
                                <input type="hidden" name="@(Html.NameFor(m => m.SecondaryProjectTaxonomyLeafIDs))[]" value="@secondaryProjectTaxonomyLeafID"/>
                            </li>
                        }
                    </ul>
                    @Html.ValidationMessageFor(m => m.SecondaryProjectTaxonomyLeafIDs)
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-xs-4 control-label">
                @Html.LabelWithSugarFor(m => m.ProjectName)
            </div>
            <div class="col-xs-8">
                @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectName)
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-4 control-label">
                @Html.LabelWithSugarFor(m => m.ProjectDescription)
            </div>
            <div class="col-xs-8">
                @Html.TextAreaWithMaxLengthFor(m => m.ProjectDescription, new TextAreaForExtensions.TextAreaDimensions(null, 8), null, new List<string> { "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectDescription)
            </div>
        </div>       
        <div class="form-group">
            <div class="col-xs-4 control-label">
                @Html.LabelWithSugarFor(m => m.ProjectStageID)
            </div>
            <div class="col-xs-8">
                @Html.DropDownListFor(m => m.ProjectStageID, ViewDataTyped.ProjectStages, new { style = "width: auto;", @class = "form-control" })
            </div>
        </div>
        @* <div class="form-group"> *@
        @*     <div class="col-xs-4 control-label"> *@
        @*         @Html.LabelWithSugarFor(m => m.FundingTypeID) *@
        @*     </div> *@
        @*     <div class="col-xs-8"> *@
        @*         @Html.DropDownListFor(m => m.FundingTypeID, ViewDataTyped.FundingTypes, new { onchange = "displaySelectedFundingTypeFields()", @class = "form-control", style = "width: auto;" }) *@
        @*         @Html.ValidationMessageFor(m => m.FundingTypeID) *@
        @*     </div> *@
        @* </div> *@
        @* <div class="form-group"> *@
        @*     <div class="col-xs-4 control-label cap-label"> *@
        @*         @Html.LabelWithSugarFor(m => m.EstimatedTotalCost) *@
        @*     </div> *@
        @*     <div class="col-xs-8"> *@
        @*         @Html.EditorFor(m => m.EstimatedTotalCost) *@
        @*         @Html.ValidationMessageFor(m => m.EstimatedTotalCost) *@
        @*     </div> *@
        @* </div> *@
        @* <div class="form-group"> *@
        @*     <div class="col-xs-4 control-label op-label"> *@
        @*         @Html.LabelWithSugarFor(m => m.EstimatedAnnualOperatingCost) *@
        @*     </div> *@
        @*     <div class="col-xs-8"> *@
        @*         @Html.EditorFor(m => m.EstimatedAnnualOperatingCost) *@
        @*         @Html.ValidationMessageFor(m => m.EstimatedAnnualOperatingCost) *@
        @*     </div> *@
        @* </div> *@
        <div class="form-group">
            <div class="col-xs-4 control-label">
                @Html.LabelWithSugarFor(m => m.PlanningDesignStartYear)
            </div>
            <div class="col-xs-8">
                @Html.DropDownListFor(m => m.PlanningDesignStartYear, ViewDataTyped.StartYearRange, new {style = "width: auto;", @class = "form-control"})
                @Html.ValidationMessageFor(m => m.PlanningDesignStartYear)
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-4 control-label">
                @Html.LabelWithSugarFor(m => m.ImplementationStartYear)
            </div>
            <div class="col-xs-8">
                @Html.DropDownListFor(m => m.ImplementationStartYear, ViewDataTyped.StartYearRange, new {style = "width: auto;", @class = "form-control"})
                @Html.ValidationMessageFor(m => m.ImplementationStartYear)
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-4 control-label">
                @Html.LabelWithSugarFor(m => m.CompletionYear)
            </div>
            <div class="col-xs-8">
                @Html.DropDownListFor(m => m.CompletionYear, ViewDataTyped.CompletionYearRange, new {style = "width: auto;", @class = "form-control"})
                @Html.ValidationMessageFor(m => m.CompletionYear)
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.ProjectID)
    @Html.HiddenFor(m => m.HasExistingProjectUpdate)
    @Html.HiddenFor(m => m.OldProjectStageID)
}

@if (ViewDataTyped.TenantAttribute.EnableSecondaryProjectTaxonomyLeaf)
{
    <script type="text/javascript">
        // <![CDATA[
        jQuery(function() {
            var secondaryProjectTaxonomyLeafSelectionDropdown = jQuery("#secondaryProjectTaxonomyLeafSelectionDropdown");
            var secondaryProjectTaxonomyLeafSelectionContainer = jQuery("#secondaryProjectTaxonomyLeafSelectionContainer");
            @{ int doesntMatter; }
            var secondaryProjectTaxonomyLeafNameMap = @Html.Raw(JObject.FromObject(ViewDataTyped.TaxonomyLeafs.Where(x => int.TryParse(x.Value, out doesntMatter)).ToDictionary(x => int.Parse(x.Value), x => x.Text)));
            jQuery("#addSecondaryProjectTaxonomyLeafButton").click(function () {
                if (!secondaryProjectTaxonomyLeafSelectionDropdown.val() ||
                    jQuery("#secondaryProjectTaxonomyLeafSelection_" + secondaryProjectTaxonomyLeafSelectionDropdown.val()).length) {
                    return;
                }

                secondaryProjectTaxonomyLeafSelectionContainer.append("<li id=\"secondaryProjectTaxonomyLeafSelection_" + secondaryProjectTaxonomyLeafSelectionDropdown.val() + "\">" +
                    "<a href=\"#\" onclick=\"event.preventDefault(); jQuery('#secondaryProjectTaxonomyLeafSelection_" + secondaryProjectTaxonomyLeafSelectionDropdown.val() + "').remove();\">" +
                    "<span class=\"glyphicon glyphicon-trash\" style=\"margin-right: 1em;\"></span>" +
                    "</a>" +
                    secondaryProjectTaxonomyLeafNameMap[secondaryProjectTaxonomyLeafSelectionDropdown.val()] +
                    "<input type=\"hidden\" name=\"@(Html.NameFor(m => m.SecondaryProjectTaxonomyLeafIDs))[]\" value=\"" + secondaryProjectTaxonomyLeafSelectionDropdown.val() + "\"/>" +
                    "</li>"
                );
                secondaryProjectTaxonomyLeafSelectionDropdown.val(null);
            });

            // HACKY fix to make width for select picker look good
            var i = 0, interval = setInterval(initializeWidth, 1);
            function initializeWidth() {
                if (i === 9) {
                    clearInterval(interval);
                } else {
                    resizeSecondaryProjectTaxonomyLeafSelectionDropdown();
                }
            }
            jQuery(window).resize(function () {
                resizeSecondaryProjectTaxonomyLeafSelectionDropdown();
            });
            function resizeSecondaryProjectTaxonomyLeafSelectionDropdown() {
                jQuery("[data-id=\"secondaryProjectTaxonomyLeafSelectionDropdown\"]")
                    .width(jQuery("[data-id=\"@Html.IdFor(m => m.TaxonomyLeafID)\"]").width() - jQuery("#addSecondaryProjectTaxonomyLeafInputGroupButton").width());
            }
        });
        // ]]>
    </script>
}
